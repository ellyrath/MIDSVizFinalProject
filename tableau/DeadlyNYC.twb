<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0210.2209                               -->
<workbook source-build='10.5.1 (10500.18.0210.2209)' source-platform='win' upgrade-extracts='false' version='10.5' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='DeadlyNYC' path='/workbooks' revision='3.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style-theme name='clean' />
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.5'>
      <aliases enabled='yes' />
      <column alias='MOTORISTS_KILLED' caption='Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MOT_KIL&quot;'>
        <calculation class='tableau' formula='&quot;MOT_KIL&quot;' />
        <aliases>
          <alias key='&quot;CYC_INJ&quot;' value='CYCLISTS_INJURED' />
          <alias key='&quot;CYC_KIL&quot;' value='CYCLISTS_KILLED' />
          <alias key='&quot;MOT_INJ&quot;' value='MOTORISTS_INJURED' />
          <alias key='&quot;MOT_KIL&quot;' value='MOTORISTS_KILLED' />
          <alias key='&quot;PED_INJ&quot;' value='PEDESTRIANS_INJURED' />
          <alias key='&quot;PED_KIL&quot;' value='PEDESTRIANS_KILLED' />
          <alias key='&quot;PER_KIL&quot;' value='TOTAL_FATALITIES' />
        </aliases>
        <members>
          <member alias='PEDESTRIANS_INJURED' value='&quot;PED_INJ&quot;' />
          <member alias='PEDESTRIANS_KILLED' value='&quot;PED_KIL&quot;' />
          <member alias='CYCLISTS_INJURED' value='&quot;CYC_INJ&quot;' />
          <member alias='CYCLISTS_KILLED' value='&quot;CYC_KIL&quot;' />
          <member alias='MOTORISTS_INJURED' value='&quot;MOT_INJ&quot;' />
          <member alias='MOTORISTS_KILLED' value='&quot;MOT_KIL&quot;' />
          <member alias='TOTAL_FATALITIES' value='&quot;PER_KIL&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='NYPD_Motor_Vehicle_Collisions' inline='true' name='federated.1l1atb9056sje81aeot3d11fhrff' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='NYPD_Motor_Vehicle_Collisions' name='textscan.1rrbmvq1kxszpo13mqywo137vi7n'>
            <connection class='textscan' directory='C:/Users/erath/Documents/Books/Session/W209/Week 10/manish' filename='NYPD_Motor_Vehicle_Collisions_with_Weather.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1rrbmvq1kxszpo13mqywo137vi7n' name='NYPD_Motor_Vehicle_Collisions_with_Weather.csv' table='[NYPD_Motor_Vehicle_Collisions_with_Weather#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='date' name='DATE' ordinal='0' />
            <column datatype='datetime' name='TIME' ordinal='1' />
            <column datatype='string' name='BOROUGH' ordinal='2' />
            <column datatype='integer' name='ZIP CODE' ordinal='3' />
            <column datatype='real' name='LATITUDE' ordinal='4' />
            <column datatype='real' name='LONGITUDE' ordinal='5' />
            <column datatype='string' name='LOCATION' ordinal='6' />
            <column datatype='string' name='ON STREET NAME' ordinal='7' />
            <column datatype='string' name='CROSS STREET NAME' ordinal='8' />
            <column datatype='string' name='OFF STREET NAME' ordinal='9' />
            <column datatype='integer' name='NUMBER OF PERSONS INJURED' ordinal='10' />
            <column datatype='integer' name='NUMBER OF PERSONS KILLED' ordinal='11' />
            <column datatype='integer' name='NUMBER OF PEDESTRIANS INJURED' ordinal='12' />
            <column datatype='integer' name='NUMBER OF PEDESTRIANS KILLED' ordinal='13' />
            <column datatype='integer' name='NUMBER OF CYCLIST INJURED' ordinal='14' />
            <column datatype='integer' name='NUMBER OF CYCLIST KILLED' ordinal='15' />
            <column datatype='integer' name='NUMBER OF MOTORIST INJURED' ordinal='16' />
            <column datatype='integer' name='NUMBER OF MOTORIST KILLED' ordinal='17' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 1' ordinal='18' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 2' ordinal='19' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 3' ordinal='20' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 4' ordinal='21' />
            <column datatype='string' name='CONTRIBUTING FACTOR VEHICLE 5' ordinal='22' />
            <column datatype='integer' name='UNIQUE KEY' ordinal='23' />
            <column datatype='string' name='VEHICLE TYPE CODE 1' ordinal='24' />
            <column datatype='string' name='VEHICLE TYPE CODE 2' ordinal='25' />
            <column datatype='string' name='VEHICLE TYPE CODE 3' ordinal='26' />
            <column datatype='string' name='VEHICLE TYPE CODE 4' ordinal='27' />
            <column datatype='string' name='VEHICLE TYPE CODE 5' ordinal='28' />
            <column datatype='real' name='TEMP' ordinal='29' />
            <column datatype='real' name='PREC' ordinal='30' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[DATE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>DATE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME</remote-name>
            <remote-type>134</remote-type>
            <local-name>[TIME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>TIME</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BOROUGH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BOROUGH]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>BOROUGH</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP CODE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>ZIP CODE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOCATION</remote-name>
            <remote-type>129</remote-type>
            <local-name>[LOCATION]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>LOCATION</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ON STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ON STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>ON STREET NAME</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CROSS STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CROSS STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>CROSS STREET NAME</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OFF STREET NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OFF STREET NAME]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>OFF STREET NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PERSONS INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PERSONS INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>NUMBER OF PERSONS INJURED</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PERSONS KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PERSONS KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>NUMBER OF PERSONS KILLED</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PEDESTRIANS INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PEDESTRIANS INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>NUMBER OF PEDESTRIANS INJURED</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF PEDESTRIANS KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF PEDESTRIANS KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>NUMBER OF PEDESTRIANS KILLED</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF CYCLIST INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF CYCLIST INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>NUMBER OF CYCLIST INJURED</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF CYCLIST KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF CYCLIST KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>NUMBER OF CYCLIST KILLED</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF MOTORIST INJURED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF MOTORIST INJURED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>NUMBER OF MOTORIST INJURED</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NUMBER OF MOTORIST KILLED</remote-name>
            <remote-type>20</remote-type>
            <local-name>[NUMBER OF MOTORIST KILLED]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>NUMBER OF MOTORIST KILLED</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 1]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 1</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 2]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 3]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 3</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 4]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 4</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CONTRIBUTING FACTOR VEHICLE 5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CONTRIBUTING FACTOR VEHICLE 5]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>CONTRIBUTING FACTOR VEHICLE 5</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIQUE KEY</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UNIQUE KEY]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>UNIQUE KEY</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 1]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 1</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 2]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 2</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 3]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 3</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 4</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 4]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 4</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VEHICLE TYPE CODE 5</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VEHICLE TYPE CODE 5]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>VEHICLE TYPE CODE 5</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TEMP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TEMP]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>TEMP</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREC</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PREC]</local-name>
            <parent-name>[NYPD_Motor_Vehicle_Collisions_with_Weather.csv]</parent-name>
            <remote-alias>PREC</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF CYCLIST INJURED:qk]&quot;' value='Cyclist' />
          <alias key='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF MOTORIST INJURED:qk]&quot;' value='Motorist' />
          <alias key='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF PEDESTRIANS INJURED:qk]&quot;' value='Pedestrians' />
          <alias key='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF PERSONS INJURED:qk]&quot;' value='Persons' />
        </aliases>
      </column>
      <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
          <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
        </semantic-values>
      </column>
      <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 2' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 2]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 3' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 3]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 4' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 4]' role='dimension' type='nominal' />
      <column caption='Contributing Factor Vehicle 5' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 5]' role='dimension' type='nominal' />
      <column caption='Cross Street Name' datatype='string' name='[CROSS STREET NAME]' role='dimension' type='nominal' />
      <column caption='Average Fatalness' datatype='real' name='[Calculation_1047649927020843008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([NUMBER OF PERSONS KILLED])/count([UNIQUE KEY])' />
      </column>
      <column caption='Month Status' datatype='string' name='[Calculation_1448188809800818688]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if (Month([DATE]) = 12 or Month([DATE]) = 1 or Month([DATE]) = 2) then &apos;Winter&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([DATE]) = 3 or Month([DATE]) = 4 or Month([DATE]) = 5) then &apos;Spring&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([DATE]) = 9 or Month([DATE]) = 10 or Month([DATE]) = 11) then &apos;Fall&apos;&#13;&#10;&#13;&#10;else &apos;Summer&apos; END' />
      </column>
      <column caption='Type of Vehicle' datatype='boolean' datatype-customized='true' name='[Calculation_1448188809841692673]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[vehicle]' />
      </column>
      <column caption='Annual Accident Rate' datatype='real' name='[Calculation_6023705303301427200]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(COUNT([UNIQUE KEY])*365)/1352' />
      </column>
      <column caption='Metric' datatype='integer' name='[Calculation_834010408279068672]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&quot;CYC_KIL&quot; THEN [NUMBER OF CYCLIST KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;CYC_INJ&quot; THEN [NUMBER OF CYCLIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_INJ&quot; THEN [NUMBER OF PEDESTRIANS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_KIL&quot; THEN [NUMBER OF PEDESTRIANS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_KIL&quot; THEN [NUMBER OF PERSONS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_INJ&quot; THEN [NUMBER OF PERSONS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_INJ&quot; THEN [NUMBER OF MOTORIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_KIL&quot; THEN [NUMBER OF MOTORIST KILLED]&#13;&#10;END' />
      </column>
      <column caption='Cyclists Injured' datatype='integer' name='[Calculation_834010408437391363]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF CYCLIST INJURED]' />
      </column>
      <column caption='Cyclists Killed' datatype='integer' name='[Calculation_834010408437485572]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF CYCLIST KILLED]' />
      </column>
      <column caption='Pedestrian Deaths' datatype='integer' name='[Calculation_834010408496345096]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS KILLED]' />
      </column>
      <column caption='Pedestrians Injured' datatype='integer' name='[Calculation_834010408804663307]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF PEDESTRIANS INJURED]' />
      </column>
      <column caption='Total Fatalities' datatype='integer' name='[Calculation_834010408935768078]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[NUMBER OF PERSONS KILLED]' />
      </column>
      <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='real' name='[Latitude (copy)]' role='measure' semantic-role='[Geographical].[Latitude]' type='ordinal'>
        <calculation class='tableau' formula='[LATITUDE]' />
      </column>
      <column datatype='real' name='[Longitude (copy)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='[LONGITUDE]' />
      </column>
      <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
      <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
      <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Off Street Name' datatype='string' name='[OFF STREET NAME]' role='dimension' type='nominal' />
      <column caption='On Street Name' datatype='string' name='[ON STREET NAME]' role='dimension' type='nominal' />
      <column caption='Prec' datatype='real' name='[PREC]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Temp' datatype='real' name='[TEMP]' role='dimension' type='ordinal' />
      <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
      <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
      <column caption='Vehicle Type Code 1' datatype='string' name='[VEHICLE TYPE CODE 1]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 2' datatype='string' name='[VEHICLE TYPE CODE 2]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 3' datatype='string' name='[VEHICLE TYPE CODE 3]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 4' datatype='string' name='[VEHICLE TYPE CODE 4]' role='dimension' type='nominal' />
      <column caption='Vehicle Type Code 5' datatype='string' name='[VEHICLE TYPE CODE 5]' role='dimension' type='nominal' />
      <column datatype='string' name='[Vehicle Type Code 1 (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[VEHICLE TYPE CODE 1]' new-bin='true'>
          <bin default-name='false' value='&quot;BIKE&quot;'>
            <value>&quot;BICYCLE&quot;</value>
            <value>&quot;MOTORCYCLE&quot;</value>
            <value>&quot;PEDICAB&quot;</value>
            <value>&quot;SCOOTER&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;BUS&quot;'>
            <value>&quot;BUS&quot;</value>
            <value>&quot;FIRE TRUCK&quot;</value>
            <value>&quot;LARGE COM VEH(6 OR MORE TIRES)&quot;</value>
            <value>&quot;PICK-UP TRUCK&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;CAR/SUV/VAN&quot;'>
            <value>&quot;PASSENGER VEHICLE&quot;</value>
            <value>&quot;SMALL COM VEH(4 TIRES)&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;LIVERY VEHICLE &amp; VAN&quot;'>
            <value>&quot;LIVERY VEHICLE&quot;</value>
            <value>&quot;VAN&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[ZIP CODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[BOROUGH]' derivation='Attribute' name='[attr:BOROUGH:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_834010408279068672]' derivation='Count' name='[cnt:Calculation_834010408279068672:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DATE]' derivation='Day' name='[dy:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[TIME]' derivation='Hour' name='[hr:TIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Month' name='[mn:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
      <column-instance column='[LATITUDE]' derivation='None' name='[none:LATITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LOCATION]' derivation='None' name='[none:LOCATION:nk]' pivot='key' type='nominal' />
      <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VEHICLE TYPE CODE 1]' derivation='None' name='[none:VEHICLE TYPE CODE 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[VEHICLE TYPE CODE 2]' derivation='None' name='[none:VEHICLE TYPE CODE 2:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_834010408279068672]' derivation='Sum' name='[sum:Calculation_834010408279068672:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF CYCLIST INJURED]' derivation='Sum' name='[sum:NUMBER OF CYCLIST INJURED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF MOTORIST INJURED]' derivation='Sum' name='[sum:NUMBER OF MOTORIST INJURED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF PEDESTRIANS INJURED]' derivation='Sum' name='[sum:NUMBER OF PEDESTRIANS INJURED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DATE]' derivation='Year-Trunc' name='[tyr:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Weekday' name='[wd:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Week' name='[wk:DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Borough)' hidden='true' name='[Action (Borough)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[BOROUGH]' />
        </groupfilter>
      </group>
      <group caption='Action (Contributing Factor Vehicle 1,HOUR(Time))' hidden='true' name='[Action (Contributing Factor Vehicle 1,HOUR(Time))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CONTRIBUTING FACTOR VEHICLE 1]' />
          <groupfilter function='level-members' level='[hr:TIME:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Vehicle Type Code 1)' hidden='true' name='[Action (Vehicle Type Code 1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[VEHICLE TYPE CODE 1]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date))' hidden='true' name='[Action (YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Date),YEAR(Date))' hidden='true' name='[Action (YEAR(Date),YEAR(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:DATE:ok]' />
          <groupfilter function='level-members' level='[tyr:DATE:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Borough,Location)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:BOROUGH:nk]' />
          <groupfilter function='level-members' level='[none:LOCATION:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (LATITUDE,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:LATITUDE:qk]' />
          <groupfilter function='level-members' level='[none:LONGITUDE:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:LATITUDE:qk]' />
          <groupfilter function='level-members' level='[none:LONGITUDE:qk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Vehicle Type Code 1,Vehicle Type Code 2)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:VEHICLE TYPE CODE 1:nk]' />
          <groupfilter function='level-members' level='[none:VEHICLE TYPE CODE 2:nk]' />
        </groupfilter>
      </group>
      <group caption='InterSection' name='[On Street Name &amp; Cross Street Name (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ON STREET NAME]' />
          <groupfilter function='level-members' level='[CROSS STREET NAME]' />
        </groupfilter>
      </group>
      <group name='[vehicle]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Vehicle Type Code 1 (group)]' member='&quot;BIKE&quot;' />
          <groupfilter function='member' level='[Vehicle Type Code 1 (group)]' member='&quot;BUS&quot;' />
          <groupfilter function='member' level='[Vehicle Type Code 1 (group)]' member='&quot;CAR/SUV/VAN&quot;' />
          <groupfilter function='member' level='[Vehicle Type Code 1 (group)]' member='&quot;TAXI&quot;' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Borough, ZIP CODE'>
          <field>[BOROUGH]</field>
          <field>[ZIP CODE]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/erath/Documents/Books/Session/W209/Week 10/manish/NYPD_Motor_Vehicle_Collisions.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='04/17/2018 05:57:31 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='841470' timestamp-start='2018-04-17 17:57:31.778' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>DATE</remote-name>
              <remote-type>133</remote-type>
              <local-name>[DATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE</remote-alias>
              <ordinal>0</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TIME</remote-name>
              <remote-type>134</remote-type>
              <local-name>[TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TIME</remote-alias>
              <ordinal>1</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Hour</aggregation>
              <approx-count>418</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BOROUGH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BOROUGH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BOROUGH</remote-alias>
              <ordinal>2</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP CODE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ZIP CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP CODE</remote-alias>
              <ordinal>3</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>163</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE</remote-alias>
              <ordinal>4</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15193</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE</remote-alias>
              <ordinal>5</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16426</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOCATION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[LOCATION]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOCATION</remote-alias>
              <ordinal>6</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16426</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ON STREET NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ON STREET NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ON STREET NAME</remote-alias>
              <ordinal>7</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>680</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CROSS STREET NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CROSS STREET NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CROSS STREET NAME</remote-alias>
              <ordinal>8</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>784</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OFF STREET NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OFF STREET NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OFF STREET NAME</remote-alias>
              <ordinal>9</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>70</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF PERSONS INJURED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NUMBER OF PERSONS INJURED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF PERSONS INJURED</remote-alias>
              <ordinal>10</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF PERSONS KILLED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NUMBER OF PERSONS KILLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF PERSONS KILLED</remote-alias>
              <ordinal>11</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF PEDESTRIANS INJURED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NUMBER OF PEDESTRIANS INJURED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF PEDESTRIANS INJURED</remote-alias>
              <ordinal>12</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF PEDESTRIANS KILLED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NUMBER OF PEDESTRIANS KILLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF PEDESTRIANS KILLED</remote-alias>
              <ordinal>13</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF CYCLIST INJURED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NUMBER OF CYCLIST INJURED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF CYCLIST INJURED</remote-alias>
              <ordinal>14</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF CYCLIST KILLED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NUMBER OF CYCLIST KILLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF CYCLIST KILLED</remote-alias>
              <ordinal>15</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF MOTORIST INJURED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NUMBER OF MOTORIST INJURED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF MOTORIST INJURED</remote-alias>
              <ordinal>16</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>NUMBER OF MOTORIST KILLED</remote-name>
              <remote-type>20</remote-type>
              <local-name>[NUMBER OF MOTORIST KILLED]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>NUMBER OF MOTORIST KILLED</remote-alias>
              <ordinal>17</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 1</remote-alias>
              <ordinal>18</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>35</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 2</remote-alias>
              <ordinal>19</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 3</remote-alias>
              <ordinal>20</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 4</remote-alias>
              <ordinal>21</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CONTRIBUTING FACTOR VEHICLE 5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CONTRIBUTING FACTOR VEHICLE 5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CONTRIBUTING FACTOR VEHICLE 5</remote-alias>
              <ordinal>22</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UNIQUE KEY</remote-name>
              <remote-type>20</remote-type>
              <local-name>[UNIQUE KEY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>UNIQUE KEY</remote-alias>
              <ordinal>23</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>415810</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 1</remote-alias>
              <ordinal>24</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 2</remote-alias>
              <ordinal>25</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 3</remote-alias>
              <ordinal>26</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 4</remote-alias>
              <ordinal>27</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VEHICLE TYPE CODE 5</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VEHICLE TYPE CODE 5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VEHICLE TYPE CODE 5</remote-alias>
              <ordinal>28</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TEMP</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TEMP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TEMP</remote-alias>
              <ordinal>29</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PREC</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PREC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PREC</remote-alias>
              <ordinal>30</ordinal>
              <family>NYPD_Motor_Vehicle_Collisions_with_Weather.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.44289' group-percentage='0.0536131' measure-ordering='alphabetic' measure-percentage='0.449883' parameter-percentage='0.0536131' rowDisplayCount='100000' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:BOROUGH:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BROOKLYN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;QUEENS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wd:DATE:ok]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#90728f'>
              <bucket>2014</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>2013</bucket>
            </map>
            <map to='#dab6af'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[dy:DATE:ok]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#90728f'>
              <bucket>2014</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>2013</bucket>
            </map>
            <map to='#dab6af'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[wk:DATE:ok]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#90728f'>
              <bucket>2014</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>2013</bucket>
            </map>
            <map to='#dab6af'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:DATE:ok]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#4e9f50'>
              <bucket>2012</bucket>
            </map>
            <map to='#90728f'>
              <bucket>2014</bucket>
            </map>
            <map to='#94a323'>
              <bucket>2018</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>2017</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>2013</bucket>
            </map>
            <map to='#dab6af'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:DATE:ok]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#4e9f50'>
              <bucket>2012</bucket>
            </map>
            <map to='#90728f'>
              <bucket>2014</bucket>
            </map>
            <map to='#94a323'>
              <bucket>2018</bucket>
            </map>
            <map to='#98d9e4'>
              <bucket>2017</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>2013</bucket>
            </map>
            <map to='#dab6af'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2015</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[tyr:DATE:ok]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>#2016-01-01 00:00:00#</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>#2012-01-01 00:00:00#</bucket>
            </map>
            <map to='#97cfd0'>
              <bucket>#2017-01-01 00:00:00#</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>#2013-01-01 00:00:00#</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>#2014-01-01 00:00:00#</bucket>
            </map>
            <map to='#f1788d'>
              <bucket>#2015-01-01 00:00:00#</bucket>
            </map>
            <map to='#f3a546'>
              <bucket>#2018-01-01 00:00:00#</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:Calculation_834010408279068672:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF CYCLIST INJURED:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1l1atb9056sje81aeot3d11fhrff]&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF MOTORIST INJURED:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF PEDESTRIANS INJURED:qk]&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF PERSONS INJURED:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:BOROUGH:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;BRONX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;QUEENS&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;MANHATTAN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BROOKLYN&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='MOTORISTS_KILLED' caption='Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MOT_KIL&quot;'>
          <calculation class='tableau' formula='&quot;MOT_KIL&quot;' />
          <aliases>
            <alias key='&quot;CYC_INJ&quot;' value='CYCLISTS_INJURED' />
            <alias key='&quot;CYC_KIL&quot;' value='CYCLISTS_KILLED' />
            <alias key='&quot;MOT_INJ&quot;' value='MOTORISTS_INJURED' />
            <alias key='&quot;MOT_KIL&quot;' value='MOTORISTS_KILLED' />
            <alias key='&quot;PED_INJ&quot;' value='PEDESTRIANS_INJURED' />
            <alias key='&quot;PED_KIL&quot;' value='PEDESTRIANS_KILLED' />
            <alias key='&quot;PER_KIL&quot;' value='TOTAL_FATALITIES' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='streets-v10' source-platform='win' version='10.5'>
      <connection api-key='pk.eyJ1IjoiZWxseXJhdGgiLCJhIjoiY2pmaWZ1ZjVrMGFrazJxbzh4ZmlqY2tncCJ9.XDUUb5JrA3s4zOyi7pglyg' class='MapBox' description='' full-url='https://api.mapbox.com/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoiZWxseXJhdGgiLCJhIjoiY2pmaWZ1ZjVrMGFrazJxbzh4ZmlqY2tncCJ9.XDUUb5JrA3s4zOyi7pglyg' inline='true' layer-separator=',' offline='' port='443' server='api.mapbox.com' service='https' tileset='US\normal' url-format='/v4/{L}/{Z}/{X}/{Y}{D}.png256?access_token=pk.eyJ1IjoiZWxseXJhdGgiLCJhIjoiY2pmaWZ1ZjVrMGFrazJxbzh4ZmlqY2tncCJ9.XDUUb5JrA3s4zOyi7pglyg' username='' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='NYPD_Motor_Vehicle_Collisions-ahqbb2' name='ellyrath.153rgtp7' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='dark-v9' name='dark-v9' wait-tile-color='#dddddd'>
          <map-layer-style name='NYPD_Motor_Vehicle_Collisions-ahqbb2' request-string='ellyrath.153rgtp7' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='10.5'>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='ellyrath.153rgtp7' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='About Maps' copyright-url='http://www.tableau.com/mapdata' short-copyright-string='' />
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dash-Intersections' type='sheet' worksheet='horizontal_borough' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dash-Intersections' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='DUI' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Borough' />
        <param name='target' value='DUI' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dash- alcohol' type='sheet' worksheet='DUI' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dash- alcohol' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='DashSummary' type='sheet' worksheet='Year-Filter' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='DashSummary' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='AccByBoroughs'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>By Borough</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='Sheet4' path='/workbooks/edavbook8' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
            <column-instance column='[UNIQUE KEY]' derivation='Count' name='[cnt:UNIQUE KEY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Year-Trunc' name='[tyr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[Action (YEAR(Date))]'>
            <groupfilter function='level-members' level='[yr:DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[Action (YEAR(Date),YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[tyr:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:BOROUGH:nk]' />
              <groupfilter function='member' level='[none:BOROUGH:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[Action (YEAR(Date))]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[Action (YEAR(Date),YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='No. of accidents' />
            <format attr='subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' value='23' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Borough:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;Count of accidents:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#0b7d9f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Accident Counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
            <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
            <column-instance column='[UNIQUE KEY]' derivation='Count' name='[cnt:UNIQUE KEY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF PERSONS KILLED]' derivation='None' name='[none:NUMBER OF PERSONS KILLED:ok]' pivot='key' type='ordinal' />
            <column-instance column='[UNIQUE KEY]' derivation='None' name='[none:UNIQUE KEY:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]'>
            <groupfilter expression='SUM([NUMBER OF PERSONS KILLED]) &gt;= 1' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:UNIQUE KEY:ok]' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-manual-selection-is-empty='true' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[none:NUMBER OF PERSONS KILLED:ok]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='Accident-Prone Locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Annual Accident Rate' datatype='real' name='[Calculation_6023705303301427200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(COUNT([UNIQUE KEY])*365)/1352' />
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[LATITUDE]' derivation='None' name='[none:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6023705303301427200]' derivation='User' name='[usr:Calculation_6023705303301427200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter from='&quot;BRONX&quot;' function='range' level='[none:BOROUGH:nk]' to='&quot;STATEN ISLAND&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' included-values='in-range'>
            <min>75.0</min>
            <max>585.0</max>
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:LONGITUDE:qk]' field-type='quantitative' max='-8151662.6570422174' min='-8299176.706519383' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:LATITUDE:qk]' field-type='quantitative' max='5009389.5927697523' min='4921095.3982350081' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' include-totals='true' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.05000000074505806' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' />
              <size column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LATITUDE:qk]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Accident-Prone Locations (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Annual Accident Rate' datatype='real' name='[Calculation_6023705303301427200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(COUNT([UNIQUE KEY])*365)/1352' />
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[LATITUDE]' derivation='None' name='[none:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6023705303301427200]' derivation='User' name='[usr:Calculation_6023705303301427200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter function='member' level='[none:BOROUGH:nk]' member='&quot;BRONX&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' included-values='in-range'>
            <min>75.0</min>
            <max>585.0</max>
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:LONGITUDE:qk]' field-type='quantitative' max='-8217603.4049612852' min='-8241846.3926578434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:LATITUDE:qk]' field-type='quantitative' max='4992782.3340435885' min='4977525.0555255236' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' include-totals='true' palette='tableau-red' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.05000000074505806' />
            <format attr='map-style' value='tableau-z-black' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-dark' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' />
              <size column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LATITUDE:qk]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Accidents'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>Accidents</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='Sheet5' path='/workbooks/edavbook8' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
            <column-instance column='[UNIQUE KEY]' derivation='Count' name='[cnt:UNIQUE KEY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year-Trunc' name='[tyr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[Action (YEAR(Date),YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[tyr:DATE:ok]' />
            </groupfilter>
          </filter>
          <sort class='natural' column='[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]' direction='ASC' />
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[Action (YEAR(Date),YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='No. of accidents' />
            <format attr='subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Count of accidents:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#5c809d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='DUI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7' fontname='Georgia' fontsize='20'>Driving Under Influence of Alcohol</run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontname='Heiti TC'>Most of the DUI accidents occur during the wee hours between 3 AM to 5 AM</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='Sheet46' path='/workbooks/drunkers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column-instance column='[DATE]' derivation='Count' name='[cnt:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[CONTRIBUTING FACTOR VEHICLE 1]' derivation='None' name='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter from='&quot;BRONX&quot;' function='range' level='[none:BOROUGH:nk]' to='&quot;STATEN ISLAND&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]'>
            <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Alcohol Involvement&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='101' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='vertical-align' value='bottom' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' />
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' />
              <geometry column='[federated.1l1atb9056sje81aeot3d11fhrff].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Borough:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;No. of Accidents:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='DUI-Time'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <repository-location id='Sheet49' path='/workbooks/drunkers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
            <column-instance column='[DATE]' derivation='Count' name='[cnt:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TIME]' derivation='Hour' name='[hr:TIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[CONTRIBUTING FACTOR VEHICLE 1]' derivation='None' name='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[Action (Borough)]'>
            <groupfilter function='level-members' level='[BOROUGH]' user:ui-action-filter='[Action10]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]'>
            <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Alcohol Involvement&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='62' />
            <format attr='title' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' scope='rows' value='No. of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='#e6e6e6' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='ih a' />
            <format attr='font-weight' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='bold' />
            <format attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='#000000' />
            <format attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Time:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Year:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;No. of Accidents:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#00000067' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</cols>
        <annotations>
          <annotation class='area' id='4' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontsize='14'>Peak Hours</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.155172'>
                  <node-reference>
                    <fields>
                      <field>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>3</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='162.47118644067797'>
                  <node-reference>
                    <axis>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.698276'>
                  <node-reference>
                    <fields>
                      <field>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</field>
                    </fields>
                    <multibucket>
                      <bucket>6</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='126.80677966101695'>
                  <node-reference>
                    <axis>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Fatal Collision Hotspots'>
      <layout-options>
        <caption>
          <formatted-text>
            <run>This view shows the fatal hotpots.  Color shows Average Fatalness.  Size shows Annual Accident Rate. The data is filtered on Borough, which has multiple members selected. The view is filtered on Average Fatalness and Annual Accident Rate.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Average Fatalness' datatype='real' name='[Calculation_1047649927020843008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([NUMBER OF PERSONS KILLED])/count([UNIQUE KEY])' />
            </column>
            <column caption='Annual Accident Rate' datatype='real' name='[Calculation_6023705303301427200]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(COUNT([UNIQUE KEY])*365)/1352' />
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
            <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[LATITUDE]' derivation='None' name='[none:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1047649927020843008]' derivation='User' name='[usr:Calculation_1047649927020843008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_6023705303301427200]' derivation='User' name='[usr:Calculation_6023705303301427200:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter from='&quot;BRONX&quot;' function='range' level='[none:BOROUGH:nk]' to='&quot;STATEN ISLAND&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]' included-values='in-range'>
            <min>0.0080000000000000002</min>
            <max>0.98999999999999999</max>
          </filter>
          <filter class='quantitative' column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' included-values='in-range'>
            <min>30.0</min>
            <max>200.0</max>
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:LONGITUDE:qk]' field-type='quantitative' max='-8210614.7343502324' min='-8258966.8558449252' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:LATITUDE:qk]' field-type='quantitative' max='4980315.0132013243' min='4953503.7753462465' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]' include-totals='true' num-steps='5' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='true' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]' />
              <size column='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-halo' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LATITUDE:qk]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Hourly'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7' fontname='Georgia' fontsize='20'>Peak Accident Prone Hours</run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontname='Georgia' fontsize='14'>4PM-5PM</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='Hourly' path='/workbooks/drunkers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
            <column-instance column='[DATE]' derivation='Count' name='[cnt:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TIME]' derivation='Hour' name='[hr:TIME:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]'>
            <groupfilter from='0' function='range' level='[hr:TIME:ok]' to='23' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='#ffffff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='14' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='ih a' />
            <format attr='font-weight' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='bold' />
            <format attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='dotted' />
            <format attr='stroke-color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-family' value='Georgia' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Hour of Time:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;No. of Accidents:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.2738673985004425' />
                <format attr='shape' value=':filled/times' />
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#00000067' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Injured vs boroughs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of People Injured vs Boroughs</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>This stacked bar shows the number of People Injured in the different Boroughs over the years.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[NUMBER OF CYCLIST INJURED]' derivation='Sum' name='[sum:NUMBER OF CYCLIST INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF MOTORIST INJURED]' derivation='Sum' name='[sum:NUMBER OF MOTORIST INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF PEDESTRIANS INJURED]' derivation='Sum' name='[sum:NUMBER OF PEDESTRIANS INJURED:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF CYCLIST INJURED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF MOTORIST INJURED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF PEDESTRIANS INJURED:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:BOROUGH:nk]' />
              <groupfilter function='member' level='[none:BOROUGH:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[Multiple Values]' scope='rows' value='Number of People Injured' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[Multiple Values]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Intersections'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>Intersections</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='crossonstreet_1' path='/workbooks/drunkers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Cross Street Name' datatype='string' name='[CROSS STREET NAME]' role='dimension' type='nominal' />
            <column caption='On Street Name' datatype='string' name='[ON STREET NAME]' role='dimension' type='nominal' />
            <column caption='Unique Key' datatype='integer' name='[UNIQUE KEY]' role='dimension' type='ordinal' />
            <column-instance column='[UNIQUE KEY]' derivation='Count' name='[cnt:UNIQUE KEY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CROSS STREET NAME]' derivation='None' name='[none:CROSS STREET NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[ON STREET NAME]' derivation='None' name='[none:ON STREET NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[Action (Borough)]'>
            <groupfilter function='level-members' level='[BOROUGH]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[federated.1l1atb9056sje81aeot3d11fhrff].[On Street Name &amp; Cross Street Name (Combined)]' direction='DESC' using='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' />
          <filter class='quantitative' column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' included-values='in-range-or-null'>
            <min>200</min>
            <max>160876</max>
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:CROSS STREET NAME:nk]'>
            <groupfilter from='&quot;0&quot;' function='range' level='[none:CROSS STREET NAME:nk]' to='&quot;ZWICKY AVENUE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:ON STREET NAME:nk]'>
            <groupfilter from='&quot;?EST 125 STREET&quot;' function='range' level='[none:ON STREET NAME:nk]' to='&quot;ZWICKY AVENUE&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:ON STREET NAME:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CROSS STREET NAME:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='Number of Accidents' />
            <format attr='subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1l1atb9056sje81aeot3d11fhrff].[On Street Name &amp; Cross Street Name (Combined)]' value='296' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[On Street Name &amp; Cross Street Name (Combined)]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Max'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#499894'>Boroughs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='MOTORISTS_KILLED' caption='Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MOT_KIL&quot;'>
              <calculation class='tableau' formula='&quot;MOT_KIL&quot;' />
              <aliases>
                <alias key='&quot;CYC_INJ&quot;' value='CYCLISTS_INJURED' />
                <alias key='&quot;CYC_KIL&quot;' value='CYCLISTS_KILLED' />
                <alias key='&quot;MOT_INJ&quot;' value='MOTORISTS_INJURED' />
                <alias key='&quot;MOT_KIL&quot;' value='MOTORISTS_KILLED' />
                <alias key='&quot;PED_INJ&quot;' value='PEDESTRIANS_INJURED' />
                <alias key='&quot;PED_KIL&quot;' value='PEDESTRIANS_KILLED' />
                <alias key='&quot;PER_KIL&quot;' value='TOTAL_FATALITIES' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Metric' datatype='integer' name='[Calculation_834010408279068672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&quot;CYC_KIL&quot; THEN [NUMBER OF CYCLIST KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;CYC_INJ&quot; THEN [NUMBER OF CYCLIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_INJ&quot; THEN [NUMBER OF PEDESTRIANS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_KIL&quot; THEN [NUMBER OF PEDESTRIANS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_KIL&quot; THEN [NUMBER OF PERSONS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_INJ&quot; THEN [NUMBER OF PERSONS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_INJ&quot; THEN [NUMBER OF MOTORIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_KIL&quot; THEN [NUMBER OF MOTORIST KILLED]&#13;&#10;END' />
            </column>
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_834010408279068672]' derivation='Sum' name='[sum:Calculation_834010408279068672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='440' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' />
              <size column='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' />
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' />
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Metric By Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>Over the Years</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Here we see if the number of injuries decreased over time or stayed the same over the years.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='MOTORISTS_KILLED' caption='Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MOT_KIL&quot;'>
              <calculation class='tableau' formula='&quot;MOT_KIL&quot;' />
              <aliases>
                <alias key='&quot;CYC_INJ&quot;' value='CYCLISTS_INJURED' />
                <alias key='&quot;CYC_KIL&quot;' value='CYCLISTS_KILLED' />
                <alias key='&quot;MOT_INJ&quot;' value='MOTORISTS_INJURED' />
                <alias key='&quot;MOT_KIL&quot;' value='MOTORISTS_KILLED' />
                <alias key='&quot;PED_INJ&quot;' value='PEDESTRIANS_INJURED' />
                <alias key='&quot;PED_KIL&quot;' value='PEDESTRIANS_KILLED' />
                <alias key='&quot;PER_KIL&quot;' value='TOTAL_FATALITIES' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Metric' datatype='integer' name='[Calculation_834010408279068672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&quot;CYC_KIL&quot; THEN [NUMBER OF CYCLIST KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;CYC_INJ&quot; THEN [NUMBER OF CYCLIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_INJ&quot; THEN [NUMBER OF PEDESTRIANS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_KIL&quot; THEN [NUMBER OF PEDESTRIANS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_KIL&quot; THEN [NUMBER OF PERSONS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_INJ&quot; THEN [NUMBER OF PERSONS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_INJ&quot; THEN [NUMBER OF MOTORIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_KIL&quot; THEN [NUMBER OF MOTORIST KILLED]&#13;&#10;END' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_834010408279068672]' derivation='Sum' name='[sum:Calculation_834010408279068672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' scope='rows' value='Count' />
            <format attr='subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' palette='orange_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]</rows>
        <cols>([federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk] / [federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Over the Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>Injuries</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Here we see if the number of injuries decreased over time or stayed the same over the years.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[NUMBER OF CYCLIST INJURED]' derivation='Sum' name='[sum:NUMBER OF CYCLIST INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF MOTORIST INJURED]' derivation='Sum' name='[sum:NUMBER OF MOTORIST INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF PEDESTRIANS INJURED]' derivation='Sum' name='[sum:NUMBER OF PEDESTRIANS INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[NUMBER OF PERSONS INJURED]' derivation='Sum' name='[sum:NUMBER OF PERSONS INJURED:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year-Trunc' name='[tyr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF CYCLIST INJURED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF MOTORIST INJURED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF PEDESTRIANS INJURED:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1l1atb9056sje81aeot3d11fhrff].[sum:NUMBER OF PERSONS INJURED:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[Action (YEAR(Date),YEAR(Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[yr:DATE:ok]' />
              <groupfilter function='level-members' level='[tyr:DATE:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:BOROUGH:nk]' />
              <groupfilter function='member' level='[none:BOROUGH:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[Action (YEAR(Date),YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[Multiple Values]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[Multiple Values]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[Multiple Values]' scope='rows' value='Number of People Injured' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='18' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]' value='Number of Injured'>
              <formatted-text>
                <run>Number of Injured</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[Multiple Values]</rows>
        <cols>([federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk] / [federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Over the Years (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Injuries over years in each borough</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run>Here we see if the number of injuries decreased over time or stayed the same over the years.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='MOTORISTS_KILLED' caption='Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MOT_KIL&quot;'>
              <calculation class='tableau' formula='&quot;MOT_KIL&quot;' />
              <aliases>
                <alias key='&quot;CYC_INJ&quot;' value='CYCLISTS_INJURED' />
                <alias key='&quot;CYC_KIL&quot;' value='CYCLISTS_KILLED' />
                <alias key='&quot;MOT_INJ&quot;' value='MOTORISTS_INJURED' />
                <alias key='&quot;MOT_KIL&quot;' value='MOTORISTS_KILLED' />
                <alias key='&quot;PED_INJ&quot;' value='PEDESTRIANS_INJURED' />
                <alias key='&quot;PED_KIL&quot;' value='PEDESTRIANS_KILLED' />
                <alias key='&quot;PER_KIL&quot;' value='TOTAL_FATALITIES' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Metric' datatype='integer' name='[Calculation_834010408279068672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&quot;CYC_KIL&quot; THEN [NUMBER OF CYCLIST KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;CYC_INJ&quot; THEN [NUMBER OF CYCLIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_INJ&quot; THEN [NUMBER OF PEDESTRIANS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_KIL&quot; THEN [NUMBER OF PEDESTRIANS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_KIL&quot; THEN [NUMBER OF PERSONS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_INJ&quot; THEN [NUMBER OF PERSONS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_INJ&quot; THEN [NUMBER OF MOTORIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_KIL&quot; THEN [NUMBER OF MOTORIST KILLED]&#13;&#10;END' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_834010408279068672]' derivation='Sum' name='[sum:Calculation_834010408279068672:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter function='level-members' level='[none:BOROUGH:nk]' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;BRONX&quot;</bucket>
              <bucket>&quot;BROOKLYN&quot;</bucket>
              <bucket>&quot;MANHATTAN&quot;</bucket>
              <bucket>&quot;QUEENS&quot;</bucket>
              <bucket>&quot;STATEN ISLAND&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Season &amp; Vehicles'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7' fontname='Georgia' fontsize='20'>Seasonal Impacts</run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontname='Georgia' fontsize='16'>This shows  &lt;[federated.1l1atb9056sje81aeot3d11fhrff].[Vehicle Type Code 1 (group)]&gt;  related accidents in different seasons </run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Month Status' datatype='string' name='[Calculation_1448188809800818688]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if (Month([DATE]) = 12 or Month([DATE]) = 1 or Month([DATE]) = 2) then &apos;Winter&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([DATE]) = 3 or Month([DATE]) = 4 or Month([DATE]) = 5) then &apos;Spring&apos;&#13;&#10;&#13;&#10;elseif&#13;&#10;&#13;&#10;(Month([DATE]) = 9 or Month([DATE]) = 10 or Month([DATE]) = 11) then &apos;Fall&apos;&#13;&#10;&#13;&#10;else &apos;Summer&apos; END' />
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
            <column caption='Vehicle Type Code 1' datatype='string' name='[VEHICLE TYPE CODE 1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Vehicle Type Code 1 (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[VEHICLE TYPE CODE 1]' new-bin='true'>
                <bin default-name='false' value='&quot;BIKE&quot;'>
                  <value>&quot;BICYCLE&quot;</value>
                  <value>&quot;MOTORCYCLE&quot;</value>
                  <value>&quot;PEDICAB&quot;</value>
                  <value>&quot;SCOOTER&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;BUS&quot;'>
                  <value>&quot;BUS&quot;</value>
                  <value>&quot;FIRE TRUCK&quot;</value>
                  <value>&quot;LARGE COM VEH(6 OR MORE TIRES)&quot;</value>
                  <value>&quot;PICK-UP TRUCK&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;CAR/SUV/VAN&quot;'>
                  <value>&quot;PASSENGER VEHICLE&quot;</value>
                  <value>&quot;SMALL COM VEH(4 TIRES)&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;LIVERY VEHICLE &amp; VAN&quot;'>
                  <value>&quot;LIVERY VEHICLE&quot;</value>
                  <value>&quot;VAN&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[DATE]' derivation='Count' name='[cnt:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TIME]' derivation='Hour' name='[hr:TIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1448188809800818688]' derivation='None' name='[none:Calculation_1448188809800818688:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[Action (Borough)]'>
            <groupfilter function='member' level='[BOROUGH]' member='&quot;BRONX&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <sort class='manual' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:Calculation_1448188809800818688:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Winter&quot;</bucket>
              <bucket>&quot;Spring&quot;</bucket>
              <bucket>&quot;Summer&quot;</bucket>
              <bucket>&quot;Fall&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[vehicle]'>
            <groupfilter function='member' level='[Vehicle Type Code 1 (group)]' member='&quot;BUS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[vehicle]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[Action (Borough)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='52' />
            <format attr='height' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:Calculation_1448188809800818688:nk]' value='56' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='ih a' />
            <format attr='text-orientation' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:Calculation_1448188809800818688:nk]' value='0' />
            <format attr='vertical-align' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:Calculation_1448188809800818688:nk]' value='bottom' />
            <format attr='font-size' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:Calculation_1448188809800818688:nk]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' value='Count Min to Max'>
              <formatted-text>
                <run>Count Min to Max</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' />
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Time:  </run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]&gt;</run>
                <run fontcolor='#787878'>&#10;Month: &#9; </run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[none:Calculation_1448188809800818688:nk]&gt;</run>
                <run fontcolor='#787878'>&#10;No. of Accidents:  </run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d4d4d4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[none:Calculation_1448188809800818688:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Weekday Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7' fontname='Georgia' fontsize='20'>Accidents are less on weekends</run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontname='Heiti TC' fontsize='10'>Most accidents occur on weekdays between 4PM to 5PM as thats the peak commute time for working people. But if we look at late hours around 12 to 4AM there are comparitively more accidents on weekends than weekdays.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column caption='Time' datatype='datetime' name='[TIME]' role='dimension' type='ordinal' />
            <column-instance column='[DATE]' derivation='Count' name='[cnt:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[TIME]' derivation='Hour' name='[hr:TIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Weekday' name='[wd:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.1l1atb9056sje81aeot3d11fhrff].[wd:DATE:ok]' direction='ASC'>
            <dictionary>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>7</bucket>
              <bucket>1</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]' value='ih a' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' value='Count'>
              <formatted-text>
                <run>Count</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' />
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[wd:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='What Boroughs'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Image of Boroughs</run>
          </formatted-text>
        </title>
        <caption>
          <formatted-text>
            <run fontcolor='#222222' fontname='sans-serif' fontsize='11'>New York City encompasses five different county-level administrative divisions called boroughs: Manhattan, the Bronx, Queens, Brooklyn, and Staten Island. All boroughs are part of New York City, and each of the boroughs is coextensive with a respective county, the primary administrative subdivision within New York State. The Bronx and Queens are concurrent with the counties of the same name, while Manhattan, Brooklyn, and Staten Island correspond to New York, Kings, and Richmond Counties respectively.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Location' datatype='string' name='[LOCATION]' role='dimension' type='nominal' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[LATITUDE]' derivation='Avg' name='[avg:LATITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[LOCATION]' derivation='None' name='[none:LOCATION:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[Exclusions (Borough,Location)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:BOROUGH:nk]' />
                <groupfilter function='level-members' level='[none:LOCATION:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:BOROUGH:nk]' member='&quot;BRONX&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.57257, -74.169876)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.606197, -73.97685)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.60824, -73.96206)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.63503, -73.96112)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.65878, -73.960526)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.67361, -73.870224)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.69502, -73.804436)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.69827, -73.788475)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.70428, -73.86935)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7073, -73.91977)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.715153, -73.77345)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.724968, -73.90432)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.72537, -73.84536)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7283, -73.86)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.72849, -73.86006)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.74355, -73.759705)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.745075, -73.987)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.74635, -73.82647)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.752754, -73.89434)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.752934, -73.9855)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.756145, -73.973495)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.765224, -73.9317)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7769, -73.9413)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.778336, -73.98184)&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:BOROUGH:nk]' member='&quot;BROOKLYN&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.574356, -74.10377)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.601, -73.979385)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.608036, -73.75806)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.6344, -73.96022)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.641, -73.95928)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.659485, -73.76783)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.67193, -73.77332)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.69822, -73.7817)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.71341, -74.00826)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7145, -74.00605)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.71603, -73.82359)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.72537, -73.84536)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.727238, -73.72054)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7283, -73.86)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.72849, -73.86006)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.730217, -73.81336)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.73329, -73.98719)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.736877, -73.993)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.757435, -73.969604)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.759243, -73.84147)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.759567, -73.83015)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.76099, -73.97722)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7672, -73.887825)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.769493, -73.844315)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.772266, -73.81587)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.780457, -73.91684)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.790035, -73.94896)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.798603, -73.94798)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.81809, -73.937965)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.865623, -73.92707)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(41.12615, -73.71353)&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:BOROUGH:nk]' member='&quot;MANHATTAN&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.714336, -73.75034)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7189, -73.81275)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.722427, -73.90282)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7283, -73.86)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.74, -73.985916)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.77861, -73.84249)&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:BOROUGH:nk]' member='&quot;QUEENS&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.5604, -74.16975)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.75, -73.89924)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7564, -73.83525)&quot;' />
                    <groupfilter function='member' level='[none:LOCATION:nk]' member='&quot;(40.7588, -73.83449)&quot;' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:BOROUGH:nk]' />
              <groupfilter function='member' level='[none:BOROUGH:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[Exclusions (Borough,Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LONGITUDE:qk]' field-type='quantitative' max='-8159513.6174883973' min='-8335610.6023971289' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LATITUDE:qk]' field-type='quantitative' max='5046298.9053730564' min='4884694.1951825693' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' />
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:LOCATION:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LATITUDE:qk]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LONGITUDE:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Year-Filter'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>Select Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='Sheet8' path='/workbooks/edavbook8' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column-instance column='[DATE]' derivation='Count' name='[cnt:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE]' derivation='Year-Trunc' name='[tyr:DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE]' derivation='Year' name='[yr:DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='54' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' num-steps='68' palette='gray_warm_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[tyr:DATE:ok]' />
              <lod column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'>&lt;[federated.1l1atb9056sje81aeot3d11fhrff].[tyr:DATE:ok]&gt;</run>
                <run fontcolor='#787878'>Æ&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='shape' value=':filled/circle' />
                <format attr='has-stroke' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='borough outline'>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter from='&quot;BRONX&quot;' function='range' level='[none:BOROUGH:nk]' to='&quot;STATEN ISLAND&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='39' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' />
              <geometry column='[federated.1l1atb9056sje81aeot3d11fhrff].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='contib factor'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7'>Contributing Factor</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='MOTORISTS_KILLED' caption='Metric' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;MOT_KIL&quot;'>
              <calculation class='tableau' formula='&quot;MOT_KIL&quot;' />
              <aliases>
                <alias key='&quot;CYC_INJ&quot;' value='CYCLISTS_INJURED' />
                <alias key='&quot;CYC_KIL&quot;' value='CYCLISTS_KILLED' />
                <alias key='&quot;MOT_INJ&quot;' value='MOTORISTS_INJURED' />
                <alias key='&quot;MOT_KIL&quot;' value='MOTORISTS_KILLED' />
                <alias key='&quot;PED_INJ&quot;' value='PEDESTRIANS_INJURED' />
                <alias key='&quot;PED_KIL&quot;' value='PEDESTRIANS_KILLED' />
                <alias key='&quot;PER_KIL&quot;' value='TOTAL_FATALITIES' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Contributing Factor Vehicle 1' datatype='string' name='[CONTRIBUTING FACTOR VEHICLE 1]' role='dimension' type='nominal' />
            <column caption='Metric' datatype='integer' name='[Calculation_834010408279068672]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1]=&quot;CYC_KIL&quot; THEN [NUMBER OF CYCLIST KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;CYC_INJ&quot; THEN [NUMBER OF CYCLIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_INJ&quot; THEN [NUMBER OF PEDESTRIANS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PED_KIL&quot; THEN [NUMBER OF PEDESTRIANS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_KIL&quot; THEN [NUMBER OF PERSONS KILLED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;PER_INJ&quot; THEN [NUMBER OF PERSONS INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_INJ&quot; THEN [NUMBER OF MOTORIST INJURED]&#13;&#10;ELSEIF [Parameters].[Parameter 1]=&quot;MOT_KIL&quot; THEN [NUMBER OF MOTORIST KILLED]&#13;&#10;END' />
            </column>
            <column caption='Number Of Cyclist Injured' datatype='integer' name='[NUMBER OF CYCLIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Cyclist Killed' datatype='integer' name='[NUMBER OF CYCLIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Injured' datatype='integer' name='[NUMBER OF MOTORIST INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Motorist Killed' datatype='integer' name='[NUMBER OF MOTORIST KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Injured' datatype='integer' name='[NUMBER OF PEDESTRIANS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Pedestrians Killed' datatype='integer' name='[NUMBER OF PEDESTRIANS KILLED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Injured' datatype='integer' name='[NUMBER OF PERSONS INJURED]' role='measure' type='quantitative' />
            <column caption='Number Of Persons Killed' datatype='integer' name='[NUMBER OF PERSONS KILLED]' role='measure' type='quantitative' />
            <column-instance column='[CONTRIBUTING FACTOR VEHICLE 1]' derivation='None' name='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_834010408279068672]' derivation='Sum' name='[sum:Calculation_834010408279068672:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='%null%' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Accelerator Defective&quot;' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Animals Action&quot;' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Brakes Defective&quot;' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Cell Phone (hands-free)&quot;' />
                <groupfilter from='&quot;Driverless/Runaway Vehicle&quot;' function='range' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' to='&quot;Failure to Keep Right&quot;' />
                <groupfilter from='&quot;Fatigued/Drowsy&quot;' function='range' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' to='&quot;Following Too Closely&quot;' />
                <groupfilter from='&quot;Headlights Defective&quot;' function='range' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' to='&quot;Other Lighting Defects&quot;' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Oversized Vehicle&quot;' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Pavement Defective&quot;' />
                <groupfilter from='&quot;Reaction to Other Uninvolved Vehicle&quot;' function='range' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' to='&quot;Traffic Control Device Improper/Non-Working&quot;' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Unsafe Lane Changing&quot;' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Unspecified&quot;' />
                <groupfilter function='member' level='[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' member='&quot;Windshield Inadequate&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]' direction='DESC' using='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' />
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' scope='cols' value='Count' />
            <format attr='subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' num-steps='5' palette='blue_teal_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' />
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</rows>
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='horizontal_borough'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#4e79a7' fontname='Georgia' fontsize='20'>Dangerous Intersections</run>
            <run>Æ&#10;</run>
            <run fontcolor='#4e79a7' fontname='Georgia' fontsize='15'>This shows all intersections with more than 200 incidents and can be filtered using the borough maps</run>
          </formatted-text>
        </title>
      </layout-options>
      <repository-location id='borough' path='/workbooks/drunkers' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
          </datasources>
          <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff'>
            <column caption='Borough' datatype='string' name='[BOROUGH]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;BRONX&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;BROOKLYN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;MANHATTAN&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;QUEENS&quot;' value='&quot;United States&quot;' />
                <semantic-value key='&quot;STATEN ISLAND&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Date' datatype='date' name='[DATE]' role='dimension' type='ordinal' />
            <column-instance column='[DATE]' derivation='Count' name='[cnt:DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[BOROUGH]' derivation='None' name='[none:BOROUGH:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <groupfilter from='&quot;BRONX&quot;' function='range' level='[none:BOROUGH:nk]' to='&quot;STATEN ISLAND&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='101' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='vertical-align' value='bottom' />
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' />
              <text column='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' />
              <geometry column='[federated.1l1atb9056sje81aeot3d11fhrff].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Boroughs'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='What Boroughs' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='15375' id='6' name='What Boroughs' pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dash Hours'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='4375' id='6' name='Hourly' pane-specification-id='2' param='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' show-title='false' type='color' w='96000' x='3200' y='93000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='88125' id='1' name='Hourly' w='96100' x='3300' y='4125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dash- alcohol'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='1' name='DUI' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='5375' id='8' name='DUI-Time' pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]' show-title='false' type='color' w='97300' x='1600' y='79250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='46625' id='7' name='DUI-Time' w='98100' x='1200' y='32125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dash-Days'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Weekday Analysis' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='7250' id='6' name='Weekday Analysis' pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dash-Factors'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='contib factor' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='13' name='Metric By Years' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='14' name='Max' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='2750' id='6' name='contib factor' pane-specification-id='2' param='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Number of Records:qk]' type='size' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6125' id='7' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='3750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dash-Intersections'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='32250' id='1' name='horizontal_borough' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='65750' id='7' name='Intersections' w='98400' x='800' y='33250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='DashSummary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='11' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='3' type='layout-basic' w='98400' x='800' y='1000'>
                <zone h='98000' id='1' name='Year-Filter' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37875' id='7' name='Accidents' w='47800' x='800' y='17625'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='4875' id='12' leg-item-order='normal' name='Over the Years' pane-specification-id='4' param='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]' show-title='false' type='color' w='99500' x='600' y='94375'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='37250' id='9' name='Over the Years' w='99000' x='500' y='54250'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='37250' id='13' name='AccByBoroughs' w='49300' x='50200' y='18000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='SeasonImpacts'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='NYPD_Motor_Vehicle_Collisions' name='federated.1l1atb9056sje81aeot3d11fhrff' />
      </datasources>
      <datasource-dependencies datasource='federated.1l1atb9056sje81aeot3d11fhrff' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='5' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='1' name='Season &amp; Vehicles' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='14875' id='6' mode='radiolist' name='Season &amp; Vehicles' param='[federated.1l1atb9056sje81aeot3d11fhrff].[vehicle]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7250' id='7' name='Season &amp; Vehicles' pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' type='color' w='16000' x='83200' y='15875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Fatal Collision Hotspots'>
      <cards>
        <edge name='left'>
          <strip size='259'>
            <card size='31' type='pages' />
            <card size='48' type='filters' />
            <card size='48' type='marks' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:ZIP CODE:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Accident-Prone Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:ZIP CODE:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Accident-Prone Locations (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' type='filter' values='relevant' />
            <card param='[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:ZIP CODE:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_1047649927020843008:qk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[usr:Calculation_6023705303301427200:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Accident Counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:UNIQUE KEY:qk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:NUMBER OF PERSONS KILLED:qk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Injured vs boroughs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Max'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LOCATION:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:OFF STREET NAME:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:ON STREET NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Over the Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Over the Years (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Metric By Years'>
      <cards>
        <edge name='left'>
          <strip size='111'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='204'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[tyr:DATE:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='What Boroughs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LONGITUDE:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LATITUDE:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LATITUDE:qk]</field>
                  <field>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LONGITUDE:qk]</field>
                  <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
                  <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LOCATION:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>41.126150000000003</value>
                <value>-73.713530000000006</value>
                <value>&quot;BROOKLYN&quot;</value>
                <value>&quot;(41.12615, -73.71353)&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LOCATION:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:OFF STREET NAME:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:ON STREET NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='contib factor'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='2' param='[federated.1l1atb9056sje81aeot3d11fhrff].[sum:Calculation_834010408279068672:qk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dash-Factors'>
      <viewpoints>
        <viewpoint name='Max'>
          <zoom type='fit-width' />
          <highlight field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Metric By Years'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='contib factor' />
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' maximized='true' name='Season &amp; Vehicles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1l1atb9056sje81aeot3d11fhrff].[vehicle]' type='filter' />
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='borough outline'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Intersections'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1l1atb9056sje81aeot3d11fhrff].[Action (Borough)]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[On Street Name &amp; Cross Street Name (Combined)]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CROSS STREET NAME:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:ON STREET NAME:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='horizontal_borough'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DUI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='DUI-Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[qr:DATE:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dash-Intersections'>
      <viewpoints>
        <viewpoint name='Intersections' />
        <viewpoint name='horizontal_borough'>
          <zoom type='fit-width' />
          <highlight field='[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dash- alcohol'>
      <viewpoints>
        <viewpoint name='DUI'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='DUI-Time'>
          <zoom type='entire-view' />
          <highlight field='[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='7' />
    </window>
    <window class='worksheet' name='AccByBoroughs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Accidents'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:UNIQUE KEY:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[yr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Year-Filter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[tyr:DATE:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[tyr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='DashSummary'>
      <viewpoints>
        <viewpoint name='AccByBoroughs'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Accidents' />
        <viewpoint name='Over the Years'>
          <zoom type='entire-view' />
          <highlight field='[federated.1l1atb9056sje81aeot3d11fhrff].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Year-Filter'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='SeasonImpacts'>
      <viewpoints>
        <viewpoint name='Season &amp; Vehicles'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='dashboard' name='Boroughs'>
      <viewpoints>
        <viewpoint name='What Boroughs'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LONGITUDE:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LATITUDE:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LATITUDE:qk]</field>
                    <field>[federated.1l1atb9056sje81aeot3d11fhrff].[avg:LONGITUDE:qk]</field>
                    <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:BOROUGH:nk]</field>
                    <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:LOCATION:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>41.126150000000003</value>
                  <value>-73.713530000000006</value>
                  <value>&quot;BROOKLYN&quot;</value>
                  <value>&quot;(41.12615, -73.71353)&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Weekday Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[qr:DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dash-Days'>
      <viewpoints>
        <viewpoint name='Weekday Analysis'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' name='Hourly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card pane-specification-id='2' param='[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]' show-title='false' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[cnt:DATE:qk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[hr:TIME:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[mn:DATE:ok]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[none:CONTRIBUTING FACTOR VEHICLE 1:nk]</field>
            <field>[federated.1l1atb9056sje81aeot3d11fhrff].[tmn:DATE:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dash Hours'>
      <viewpoints>
        <viewpoint name='Hourly'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='AccByBoroughs' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Boroughs' width='192'>
      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
      afrtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='DUI-Time' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dash Hours' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dash- alcohol' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dash-Days' width='192'>
      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
      d9+BAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dash-Factors' width='192'>
      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
      nopF+P8BAPAGDuC+bXAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dash-Intersections' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DashSummary' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hourly' width='192'>
      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
      IhaUfYEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Injured vs boroughs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Intersections' width='192'>
      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
      nogAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Season &amp; Vehicles' width='192'>
      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
      AO0xnsEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='SeasonImpacts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Weekday Analysis' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Rc13ng+XtV9Srn1KmqcwQaORAESDCTSqQs2ZJt2XIYa23v2dndORtm
      95zx7mjnjOyxNSPHcR7LVjQpyswBBJFjAw2g0ehudM6hurpyju/tHw1S1MhNNqwC6oHk778i
      io0Pt+937/2yIMuyzMd8zEcUVbUF+JiPqSYfK8DHfKT5WAE+5iPNxwrwMR9pPlQKUEhFuHxp
      gLxUZPzGVZYimY2/LMssz06QLtw9+X6CUopL589z/vx5hieX2JQ3opRmYnrpTkv2HiTmpqbI
      FLIMX71GKpNmYmYB6b3CyhJLsxNkipv7icH5GWK5TX75pyQfD3LxwvoaTy8sMTG9+GN/rv7q
      V7/61bsiyV0gsTjMf/nDP6WmZxcv/NXXEfx7yc0PMLaUwKErcPnqdaYXQtS4jJw/fYYL587g
      8LUz2HeaDEYC87PoNXmmVnN4Hea7ILEKVTnGycuzPHSwkyuXx9EWwwTzGpZvXmYikMZlLHP6
      5GnKBg/l6Ax9/Rc5OxDAZ85x9so4JjHPUlwmOj+B2uZCr1FXXMorb71AQi7yd3/7fSwuO0OT
      QcylIDem1/A4dOtreeE8ZqeHyZEhpgNJPBaZs6fPI1jcxGZvcHFonro6F9fOnuLs8bNYOtqZ
      7jvDcrrM6uISDpua4fEgtV5HRWVXaTSoIpOcWVBxqMvMt7/7CplsBpNBw8RCCE1F/zYF0NHd
      zulXXsVS00xiqo8+nZ/t4hDHA1pCkht3so+ToXHkuvuwitcILsyQToV47dhFtlhTjA1JtB3+
      /N0RVqXBarOg0xswG8ucPHkZwy4DM+UphoZn8Fg0lKJNDAyNsZLXowlPceihfVydnWRqep7F
      kavoXT/H9MAbaLU6frZ72x0QUqCpxcuLb5zi4OMP03f6DDsPHeJ7/3SSeo+VwORF7D2fxKy5
      QWRplEDJT/H6GyyNWsjIIqPBPDWFKabC4NQmGE7aqLHoKEQWmA8nmRs8SZdHQzDoAM8edlZY
      epVGh9ViRGfQY9SJyFobbinIuctx1lK6D9cTCMDQsAUpNEdrmw+dxUU5usBitITLasBktqDT
      ajHbHARnR4lmigRmxokUQJYFetpruTqbpqvWUgXJTdjEBBOLa2j0Fhw2K00t7dTXenG5rKyt
      hbEa1IxNzlAuFhi/OYpKp0PQezCnZ1DVtmEU78yvs87XzPRiggce3EcmGqWl1Y/baaehpZWO
      5kYCMzeJZUrr/wqzCZ1ej83uxGZz0dPVjstTg5YsSUlPNjjLaixNPDjP3FoKUSWza+8Wjp4Y
      ZdcW/x2R/70YTCYMWh1ak5lcbAXhwxQIKxdzpHISQjmPRlQjqw2UM3EKghabSSRXElCV84h6
      A4loFEEtYjDoSKUzaFRqRvreYEXs4ece340g3B2ZpXKRZKaAzWIiGQ2RK4HRaqOcjlNU6XGY
      tYTDEfQWJ1ohTzyVQ9TqUUsF8iUJrZzl+8++zKNf/DU6a+7Ms00uFwnFUrgdVmLxOBarg3wq
      SrasxmEzEg1HEDRajHotkqBFKqTRGvTEo3EsDjdCIUU8U8LlspOMhinJaixWI4lYApWoY/Xm
      CU4v2PntX3iEO7HsUiFLqihgNWiIJXMYRSipRHKp+IdLAX4qZBlJlhEEAeFu7f4KIN+SW3WP
      yf1eJEkCQUBVBfk/VoCP+UjzY0ZwJpMhl8tVS5YfYzqWIFO6O66ySqG+B0/ge/H0kyp4Zm94
      A8iyTLGQR6PVUcxnKctqDHodggCyVCaXL6HX6ygVspTQoNMIZHNFjCZDRd5x3x0eYzmVrsBP
      un1kWSKfTiFo9Gh1WmD9s6wS0WnV5LMFtEYjcilHsQR6owFBENBqqudTkEpF8pksotGERqNG
      LhfJZXJojSakYpZioYzObEUtlCkWJESduP7/VfEBIEtl8uk0Kq0BUSve2lslSiVQySXyhRI6
      k5FyNo0kiOgMOgBKUuVk2NANGp4f5m+//QK//D/+r/Qde4NYNMYnfvE3aLBqCI6f4evfusz/
      /Tv/G1ee+xNOx5v5lQMmfv8f+vmTP/8qd8ODfifJB25y8cQN8vkSh7/0JVTJeU49/zoNux/E
      ELnJYiyPo6OX5PAg6A10PfE0boehqjIvXT3J/GKETMnOE198isDV04xOLmKo3UZ59ixqbydb
      HvkEhZnjnL6Q5/Nf+UxV5QVIzA4wcGmSVAY+8atfRK2G5Qs/5PpyPY3GALFIFH3bTjITo2Rz
      eXZ/4Zcqvs4bHlmRaAq3ywqilac/+RCxSOTd6/Lq5WF2ba1heHoFlUaDNh/i/GgAr626m6BS
      6Ou2cvhnP0OdvxaVSqBcyqEzmEhGoqBRUcrlUUXmWInkkVCjUlX/6ePf/wT7H30A561AUt2+
      x/B5jZQLCTR6B4V0guTqLNMLEax6XZWlXcfWuocHPvsUtf4aBAGywWlWwkUMOj29n/4CW/ds
      w+Ju4sEv/yJNXc2IdyDIt6ECdG7fg8skIpfTfPsv/pqtT3yBeosaObvCwEwCvbrM4LXrlNHQ
      UmdkJgwus7biAlaDcjbMjRPn8O06gKiWEUQzW596Bm1ujeVwkYOffphEPIWntZf2DieRQLTa
      IpOcv8ng1Vm2HtyNJEms3hymbt/DyPE1avc8yK7ddUzfmCS1usb8jRtkqy0wUIgvc/30Fdr3
      7wdkctEw8WCQ+eFhFgfPsZyx09Zi5+axt7C07sBmqfz+2jgSLKjZcd9hrEKetr33U0wsEc82
      Y8iVeebLv87WJjuDQ9NYRB89Vhf7czKFWARlnC0/HbnwGul0nIkrV/BQwPbwQdZOHsPWvZ8t
      ziJDfWNsfernyM1eYSVqpndHXbVFJhEKkg2vMnZtCG0qgX9PO8PHz9P56CcpL13nZlDFgacf
      RxQOsjwRRgl3dSa8RjYR5ublAbxkcD/+OI+1dLK0mCE5c5lYZIl5bYFYLE30Sj8W52NYTJVV
      AsW6QatpBL+XbCKB3mrdlGFfTSP4R0hkEhkMVvOmZK6mEfxeNrvOsizfHSO42hhEFSZt9TeU
      yW3f1PcEAbTq6ssLKsxu66a/vZ7VWX0lMG9ynWWgLFVOXsUqgFWvpoBYbTFuC70iboDbo5Kb
      6W4gy3JF1XXD31gpn+Tt118mfMtakss5jjz/LOOrCVJLQ/z5N/+RWCrO9//2LxleTFRQJGVQ
      zKRIpX8UFJSLWcJrMXKxVcYHbpBI5QnNjDE+eJNcoYJ38k9Bei3Ee8sbMpEQ+bJMZH6K8Rtj
      FApFlsdGWFqOVE3G/558Mk4mty51OZ9mZvA6q8E46bUlRq9cJZrIszo5wvT4LKVy5ZV1QwUY
      PHuUi9eGyN4KxqbD89wYvUlf/wiF5BrX+q9xvf8C/cNjrCWqWVVSeaRimtN/99fcuPlO4YnM
      zLkXef3FiwwcOUI6NEvf+SH6jhxD1GruSALX7ZIOzvLc1/6U8K3P2dVpnv/Gn7Eaj3Dh2GWi
      N89w/lQ/1wdnufDGkarK+g7FTIQj//UvGF9cV8jYwhSRRJbjz7/A2Mm3SJS0COUgF9++zsT5
      E6yGK28TbqgA2x/8JFv96+8yWZYZv3IB2ebl5pVLZEsSja0NHH/jHF1dzRUXqtoIGgM9D+5F
      vHXgZAITTC8XsBjURPIqdh7cjRRfwe5wMnyhj1Ck+sa6wdnAlm2t737Wufxs3dYC6QSy08e2
      A9uIB0Jkg4uUZZFSFWV9B43extYDO9DcWmdX+za29/rxd3ahd9YQHr3E5PVBtPVb6WytJ556
      nwq/fyEbKoBGI2JzuBHVADKLUYlf+x9+m5/Z52E2oaajuxd/zxZ6mxsw6SsfoKgmgqBCI66b
      R5lIlJKsQkORhfFpTJoyQ/1DqK0WzN5GfH4HmVT186dUGhG1SgVIJCMx0IioVQKYrAjhJUav
      jqG16nG1bsFGThFxAEGlRrO+wUhHooSmB3jx+8epbapHbbLRtaWZVNlMYWWEmYU1rCZj5WVQ
      qhv07flpQrnq/ZoK6Tj5spbw1UtYH34IZzlHOJzDoEozNxOkoWcLheA0sbyelq4W1KrqG8HJ
      lQDaOifjJ/rpfOQgxWAAjbOG5PwoazGZtm3tBMdvgrUBv98NVN8IzsUjlEQzgb4LGHqaic6u
      ojY58dfqWViI0dzbTWRqiIxspaW7BbVQWZ/VxwrwARTzeTQ63abe+dVWgHVkivkiGp12UzJX
      WwHeYbPrXGkvkGLdoKJaQKuuvnmpNeo39T0BUMT+R0Bj2Hy0VK2q8JH6L2Sz6wwC5Qqe2YpV
      AI1KGQpwO2juMXnf4V6SWpZBJVdO4g3botw89yqvnrpMXnTh81iRS2m+/5d/TtHbgSkyxH/4
      ix+yvbeFv/76H6D27aTBWdnskoVUjFxZCb4KSMwP89o/vsZaUiI91c/JN05RttgZfOkFbgxO
      UtPZjUFUKSIr9F0KEV76q28xOraMv72Bo3/2LVz7t3D1uWcZ6B/B2tyNRb9+ZSlF6pWhi7z9
      0qu8fWwUbWSMU8cuYjAbOPXyaxx74Sj+3Xsw6zV3JxDWsf9J9vi1zCysARAPTBLKlRnoH6SY
      TxNZDXDp3BlW0zky+XIFRVIescVZanceYmnoKtcuXcNsc+By6Ekn0xQyKcoK/OfLUoF0Kkc+
      nSK2FkFGopSPEyqa2bXFSH/fdLVF/Anqeg/Q0+Tl8OeeJJNMUcxlKRjrePyp/bTtP0StrfKp
      lhsqQGjqCi/3rfLw/d3IsszwpYsINg9zQ1eJFyQa2xo5e+IqPZ2+igulNDxdOygFJinIakSz
      l8MPb+HG8bdRtT7A7t4aVlfj1RbxJygsjWHf/1k6fSIlnQeXVQ96J52NZmYnV9CbK+9S/KmR
      0kwtl+n0mYmUzXzumb3MzwaZvXqd9n177kjR/4Y2wNz8Ao2Ntaytxai1eCnq6/jyl59m5epR
      YpKNPXv2km9ro8mpQmP9cNQBbIhUJhUJs/3wQzjKS5w4Mcz2Rz/ByuUzTIWsHNxvq7aEP4HW
      vxPj5TcImevpcenJtzajBwqZJAmVj8P7Gqot4k+Sz+Hp6Ean19HV6uD4+QX2frKX8I0VGmru
      TKK9Yt2g51Zmiear7wa9HT42gu88sgyVTAlShOPuY6rHvbT5gYo3LFOsG1QtCGiU5FXZBOI9
      Ji8oIgRwW8gyt9JzKsOGN0AqOMvbJ8+RyN1yRcolRq70s5bKkYsscvxMH9lSgcunjrMYubee
      KrdLOZ/mwovPMzy6QnjqOm/+01uksnmuv/kSp45dpqiMbOj/Dpkbb7/CmdODlGUIjk2QBmYv
      n+LFb36XVQVmsJezcU4//xwjE6uEp27w2rOvk8hkufTiDzh7ZrCilWDvsHFXiEgMVWKRi6PL
      AOTiAV5+4fucvDxBJjjBP3z3eUYHL/Od555nMlD9bMg7SXT2BiltLZN95whHS3i0cUauDyM2
      7caSnmBqXnm7KTNxkpsxLxZVipWJYf7xT75DUs4zdHWCHY8+gVuBvWuGT76J1tdLcmmSk0cv
      0dHuZG1uDkvPA5QWBgiE7mI2qL9rO06HjkIyDcjMD1/G3NTLxEA/RUmm0e/h2JunaWlvqbhQ
      SkMqlsglYpTVIq3be9GoBbKSiQ6fgaKxkcb6anSTfn/igSDpZJTZ8Uk0ng727GoDWaB7z3aW
      rxzl8uBqtUX8CRJrQULLy0zenCIRCrAyMcFKxkiLR0ZX14WnwsFWeB8FuH7iFUaWEoiiiCzL
      XB2c5L4HH6bNGGV0NYvH10KqpKGjKq3E7y6CWkUhk6FYlrny+ossr2XQ5AL81//36yyvxcjn
      lFcQ5O7agaEQQUJE806tslRkeWaOZCKPzqS8/h3+Lb2UUhF0FjtNLT7SmSLq1Cx/9P/8MYG1
      GMVC5TMDNnSDSuUi+UIZrU6HSoBioYCo1SGVCkgI68aTLKMSAJXmR4tcIS4G5ogVlGFbyLJE
      PpNFJepQC9J6yz6dlnwuBwjojEbUKgFRUW5QmUI2iyRo0Om1lAsFVFoRKZ+nUJIxGA3rrQir
      LeZ7kKUy+WwOtVaPihL5goRepyGbzYOguiWz8NFIh1aSAmwWZSnA5lDkL/99kOXKyqxYN6iM
      rJieNZtFvue86usb6l5CRq6ozIpVAEkGhdRqfKi519b4rt0AsiwxeOEU1o69tHgsyFKeM0eO
      4t/3MDWlJX54epzPPv0Ip156ka6HfobOOgX61SpELrrMmddO4t1+P15hlf6BRfY+sItrZy6Q
      SOR54Od/AZ/HVG0xf5xylnMvvkxSW8fuLhunTg7Qfv9hxOAIE8tlnvyFZzAprO3SytBFLl4c
      Jqfx0mpPMTsfof2RT1EY7yNt9HP4yYNUegzahj8uvjTMC68eIxhfL/jORBbpu3yRC/03ycWW
      OXnyDDeuXOTEhcssR6tfFH4nWR3ux7n7cRaunmfmxjhabYmlpMiTX/gUVrsDj0N5mZWJm6eZ
      StqxGNRMXLqKoaERX70Tl78dgmMEUtWW8Cep6z3Agd3N+Lq3cN/Tn8frduHziSzOp0kHZkjn
      7lpfoBKvPP8KJpuO+cUAEjLTA32UrTUM918mX5bxN9dx/I0ztHc2V1wopVGzZQ+RgRPML0eJ
      FyQ62+pJROKsDZ7DueMhdBrlvf0zsTgmTy3FyDzu/U+yq7Oei8cvUNfaxI77OpkfXfzgH3LX
      KTJ4Y5Vdu5pJrUxTtDfjLkZQ17fjtBlIZyrvFNlAAdR86X/+tzy6t5fWpjoEWWZsIc6Xf+O3
      eWqLnvFwmeb2bmz1jWzxe9DeofGcSiEfDxEKxenet59ar5nrVydxeZwszGTo2OKstnj/LN4d
      h5Dn+onkdCRmr3Px5EXsHifHvvePXBtaw9/sqraIP0k6hGRtwKhVE1sNUNPSjGCtQRWeYDUh
      YzFWPu1esW7QezEdWn8PHgRlReYxbcxd6w36MR/zUUCxbtBCWSZXUuTltCFl+R47Tu9RKvlo
      2VABCpk4S6sRbO5anBYDyBLh4BoGhwutlGU5nKK+zktoeQmTux6LXrG69C+ilMtQkNUYDTqk
      Up7VmTk09hpsuhJLi0EcdXUkVwOUJBXu5iYsxurn1mSjUTQOByJQziZYmF3BXlNDOrxKvijj
      8vkpRAKU9U5qax3VFheAQjpFWaPDoBORijmWZ+bQ2r0ImTDJdBFLTQMuu550pojFaqro5of3
      eQJNXX6TK9MRireSsEvZCH/3p3/AqcF5krP9/M7X/oiZmVH+4Gv/kSvTsYoKVW2kUoZTf/dX
      DAyve0rSK9NMTS1w9NkfMnH8FWYCKYrFErlknL6XXiCaqn5biExonmf/wx8TuvV5+O0jLM7P
      cuK1U+TSGfr+6TnGB69xtX+M4b6rKOGuKmVjHPmzP2d0Yb2ndWDkEiM3pjn6g5cpZDOMHH+N
      yfkog69+l6NHr90RGTZUgJXlMJGlEYanVgCZ1akbeLceYHboOmUJapwmTr99Grev8Y4IVk0E
      lY7O+3Yi3tolFn839x/eia+tHbXVS35phLmFBP4mK86th/F7qx8H0Flr6N7S/O7nlXiB+w7f
      j0Eo09BkwtT9KK7CMisLy4TDcUUogEprpmvv1ne7QyciMVr3HqTWqMLeXI/a1cWeHX6adx3A
      or8zEm+oAHXt29jZ3UBoLYIsQ//lq4gGM5nlUeYSBeqb2xifCtDTrEw34E+DoFKju9VeMJdI
      kAhO89r33qChow3R6mLbni0kw1HmL1+hcd9eRWQAqbU6NBo16zPCUriMGsZGJymIBhb6Bmk7
      sANTjZ/OnbtwKKQ7tEqtQXtrYHc2kUBvsxCYGidSFMgtTGP2taJVq9AZKjN8/Z9jQzdoJrbK
      xHyI1o5OzHoNC9PT1La2kQnOk5VECrIKuVjArJURzLW4KjzC8sTiDOEqNsfNJ6Nky1qiVy+j
      6W0hODwLBgfdbU4mx1do3bWDcmQVfb2fWw3Wqp4NGltYRO/3Mn7sEi17O5gYmKC+Zzv6Ugq9
      twadUGbm+gA4mmhtqamqrO+QiaxR0lkJXDyP6+BeAlcHMDZ0UWdXkRNM2G0GyvkM0XgWt9dV
      cRtAsXGAaivAOxSyWcRNnkDVVoB1JPLZAlqDXhE302bJZ7NoN7HOld6uinXdJPNlYhkl9AYV
      YTNyCKCcphBqSBc39U1BEBSiKCKZTazzO4VYlUKxCpAuSCTusZ6jd6Bz3x1HgDvScvBOUekb
      YMPu0Esj53n5zdPk9R4a3BbkUobn/+5vKHnaMUZH+P3/9hJbt7bwzT/+Q9QN26l3bLa/++YY
      CoVJFTZ3ilWafHCMk8++zPzMKvUdbahVAumF61w6P4sYH+PysfNIBgOjr7/E+PURbE2dGPWa
      qirA8pXj9B87SSimoqG5FoClC68yHzNhlle5dOoGXpeKiy+8TCCcp6FlvTViNRUgOXedMy+8
      zvx8jMbOZtKLNzn74ksEowK+ZjdXnn8OjcvKwCuvceWNt7F3b8dsqGwO94ZeoHOn+jC6nLhs
      6y6+RHCapWiSq/2DlLIJlufmuXL+LPOhGMmsEp4qlUN0NvPQL/8yNjFLsSQjFZKMXbpIOpUn
      F49RKGTI5jTs/cIv0dXlIRmvfjq4t/cgD/78FymE5wEoxeYYGZwgn8qRTMXJRuKkVuextO+j
      NDmIEhq5GOu7eeiXfgldOYokg6G2ja7eRiKra4THrzE/G6CscbL3qQfx9uzAewfSzjdUALUg
      0NTk4Mz5QWRZZqTvAip7DdODV0gUJRrb/Jx6+zI9XR/COAAQGL6Ke/shTHoVyZnrzM+GWRkZ
      ZmEtx8Off4L48gqplUlSop+mps1NOb+TyKUc0319bH3yUwBMnDpBNpthaWIad3sXWo2Avakb
      KTRONCOhiLGGcpmlgcs03/8oGrVAuZDH1fswpvwSQ2fPkUsGWZwOELx5jZrefevTbCrMhjbA
      occPc/b6HLt3HwJkMmoXX/7Vz7HU9wahopmdO3eTbWqm1aVCU2EXaLVJzd/gyqlLeDozsGjA
      eugBfqa5i+GBNdymGP1vXcK3fSsXXnwDc0MbnuZGXM7qVoQtXDjC+HSatMaBXSXR9tlfo3l1
      jOWoDTUaXA21SKUC2WSShvsOooT6tej4ZQYuDuOJyJTmRLRNbiZO9WHp2suuA9tYGujD2Ooj
      fmMRr896R2RQrBv0+zfHWUlVv+NcbHERs8+3KW+BMmzJEpHFNey+uk2l+irFCI4uLmLZxDp/
      ZNygSsHuu9cGgGhw+uqqLcRt46jSOitWAWKZIsFUvtpi3Bb3WocFWLf1qn/+b56PTBwgX5LI
      KrPt8j+LLMv3rgIo4Am0We5aHOBm/yle+afnGEtZ6G2pQSok+Mv/9DXyNT1YIlf5N7/39+ze
      0cbXf+ffITbfR5O7si6qi0tBYvnq9NwsRaa59OxzBOai1HS2UVgd58abr3Ht9bOIhSVGTp1B
      MtqYffNFAnMLGGub0OkqO73wdgkPnmLkxFHiSRMev5vY9RMMnrlAIp4ifO0cs/2X0NZ1EDrz
      HdaKfpye9d+XqooKkF0a5sqLL7C6nKOuvZHM4g0G33yLpZkAuZkrzA0OIRmdTL36XeZvTuFo
      7UKscNnphj+ta+c+RNHOYwe2ABBZHANnPTevXUcql9HKRS6cOg1mu2KmjVcKjbOVLQ/uppTP
      Icky+tpOmjqb6P7MMzQ9+CncDh2lbISy6MIk5ggtr1VbZFzbH6K+0UXxVh21JMkIskQ5skwk
      mkZn86DVSIhWJ4KgjJvV0LCVrr09FHNZZGQiUyNIgh6Lx02uAN5GO8vD47dePJXtCPcOGypA
      LjhO2tqO26hBlmVuXL6EYLKzMnadcK6Mr7WZy30jdLfVVl6qKlNKrCI7enBYixRyZaDE2kKY
      mqZ64kvLNB9+kHQoj9vvApUKraH69QCplQXcuz+JHJ8FYC0Qo/dTn6acDGGo66Rti4OV+RQW
      Z/VjFu+Qj66gadiDURVHKsuotSYaDjxGYWUSZ0szUqGEzpBF7dmLv8lJKlH5ZkYbd4ZTWziw
      rxaB9X6M5vpevnzwMKGbl0ipTDz0QD2lndupscio3ZXv215NVDoDgfNH0DZsJ339AuUD+7A2
      96DXq5HKSUbPztN46CFSN88hWVqp9Ve/JkKjLjLx9uvU7TvM4oWL+PbvYfrkKWof/ByqyDgz
      U0XaH66FaA471VdYALUosnj6TWxd+whdPod5x/2snD2Nrec+9MIaiykD7Q8eInz1JPGSk3ZP
      5adxKjYO8Ed9N5iJJ6stBplIGIPTtak0XWW8BMtkIkkMTvumvDtKMYJvZ50riWK9QIlYmsia
      EjJWRHLBzcmhnG7WKvKbXDuVSqUQN6hIbpMy35WuENVm5uYKI7PKG+PzvihjJ90eKkEpIezN
      UeH20Bu6QYPTg7x97ioGRy12kw5ZKnDx2DFkey1icp5/evsyTc11nHz5RXA24zRXNh/opYuj
      rMaqkwqhUos8uq+bJiPMRzLIgGi0cJ/fTFZt5jN7mikkk9Q1NfJgm4Ol1Rh5iaoqgMlq49N7
      2tHk0wRvFcO4vF5ajTINzU083OklFEtzaFcnDTqJueitajuhegqg0ep5YncntdoSC7EcRouV
      T+9tp0aUyOusfGqHn2SqyON7OzjQUUNoNUKiwrGhDb1AN6+cJ5GMMDS1fgpno0ucOXuSc/2j
      5CILHDlyjOFrfbx58gyL4eqXLlYS0WClziDhrXGt1/sKKg70drC30cbjO5uYD6bQWt0cbjQQ
      SJXQaarfYM9f5yafTNPV5AVA0Oj4zL5umuvcdJqLnFgocl+jmZnlML2tykiVsFht2NQFmurc
      qAENEmeujdPc3MijW+qZD2XQkeOly1PEUjnCucqn3W/4m8vnVTi9ZrKJFCAzfb0PweVj5Mqt
      7tBNtRx7/QztHR++KZF6s4FsIkm+BKJGwFPv48EmCzUeO06tSKoE3S016MtFVFoDPnv1m2JZ
      tGoimSwqYf1Ve9/eXmo0Ek11DtRliVQmh1QushhOEZIElDDa0GjQk0qmKaNCEHEADbgAACAA
      SURBVCCRTKG1uxiZnMOoUZMsq9lSZ6Ghrpa15RWyd3NOsMNlYWUxgstjX68HmArys7/4Kxxu
      ERhbK+Jr7kDn9NLV4ECjiGLwypHPZDE7XVjUEt4GD8WVRf7kyBDDCxEuLUTY4XcQnl9gpmyg
      xS4STld/SmQklafd56WQy9PudzHYf53vXplnej5AyVHDl+7zs5bT8rMHOjAUclR+4u7tk85k
      cXvciFIRv8/DtvYO/qcHW2l2mRkKptjRYGU1lsPnNjCzemcGGijWDfrrf/QCgwowght8buKL
      ITa1/Io4BwTaGhzMLUXY1INBIUawv8FFeCn8wYpZYSNYsV4gpbC0GPrgLykKmamlSLWFuG0W
      lsJV+XsVqwCCTgN6hQ2x+iDuwCDnO42g1SjiBrgdZKlyxsCGClDMpQjHs7jcLkS1CmSJeDSG
      zmJDlPOEYllcbgfx0BoGmxujrsJVpoKAoJxGOx+ILMv33EZaRxmR4M0iy3JF5d0wDnDiB3/P
      eDBIMG2gtd5BKRvhL77+e2Sd3bhTQ/zvv/8tdm71842v/S7mjkM0eyqbX/JS/zir8erEAUx2
      Jz+7u43HurwMz6+B1shn9nbQZRORLQ4e76wln86yZ3sH+xqsLKxG1+MA5eqZUy6vh2d2tWJX
      FViI5Whu9vOZ7U24NDJev4/DnV6CgTBlo5PP9DgYXV1PMxHUqqopgNPt4bM7W3m83cnluRB6
      s4VndrfTZFKhd9fwqV4/UjrJlu42DjbamQ9GyVV4jTf0Aul0GuLRKONT6202grNDuHv2MTN0
      nbIMHruBM8dO4aj3V1QgJZCORXhrPMjE0hrpkowoanEYRDw2I9vrrbw5EmRfm5uByRWsDhsm
      BTwkLWYTBrWA17Ze7h4KBvnBpUncTgc1dgM6vRGbXsODnX7qXMpIXoyE1jg9F2VobpWyDHq9
      HqtWjdduodOm5vtXl9na1cZut4ZkNs+dqI/aUAEa2nvobmmkscGLLMtc7buCSmsksTDCYrJI
      fUsrI6NL9LQocNhaBdjS6OLGbBAZsFktzM7MsiZpuDYT5tFeH1pkMqkkZyaj+B3V77HQaNNz
      fGACrWndw58tlNna5OXcVBBjLs7rIyEO7Ghnl89Ci8+NMqY6C2ytszCwuD5fwmszMTg+TUqt
      R4dAWZZBoyEeDrFY1NJsrXz3kQ3PrhpfI5FyjEd6uwHYcvBT+Dq7Sa1sJS2JfLauF/nRB7Bo
      ZQSbEsIqFURQIRYzrGRlmlpqKa/GsO/wo84k0JsMmIQi56ejHN7VhUXKc3yp+pHwiUCMw9va
      WA2ssbW1Brujlvs8MEiBpYKWh1s0nLo6xnxa5PEdjs25de80ag1SJkm0INPaXEM2FGPrlkZK
      sQizgolf2edjYGgST4ufDlOOI6nKx1sUGwf4V3/5KoPzwWqLQY3bRiwU54PK82VZhoISepkK
      +DwWVtYSbEYaQatRhLOh1m0lEkrwQVtcluWPRlG8MoJKsBqKb+p7giBUtSb4R8gs3k4auULW
      ORDanMyCIHw00qFVBj0qizIqlzaFLINeCTfAbaIVFXEDbBZZlhEqWHm0oREsyxLL8zNkizIr
      M6OMzQbePeFK+QRjo7OUZQjOjzM+v0o+Geba9ZubC78rHL3RxEMdDRxu8aBVrY9M2tFUxzbP
      uuloM5uwaVX4vW521dkUMWy51uPioS4f+xrWa341Wj33t9fh0q1L1+CyohFUdPlr6fVU32gH
      EAQVW/21dNzqLC6o1GxvrKXFqsNkNHGwxYtVp+Ngez2H22tx3oFB5BtPiew/yp/85TcJri7w
      ytmbDJ9+haXE+gm3MHiav/j777GSKDBw4gX+9ntvMtR/gj/9m+eofp/kn55iIc9MPE+bxwIy
      eJxuGvRl9rQ1oBW1/OKhrbRZjNRbNNTX1+M3Vv8EjSdTrBS1tNvXL/V6t5VcQeDhjhqMVif/
      +pEumr1eWowyNptFEUrbUFdHg6aA22pGBdR63NSJZQ50+Hmkq45wVqLBpGYqlKLZY6eiSUC3
      2HAdbA1b2NtVSyGdQDDYsOohmSkCEhcvDnFwVwNXh2cRNCIufYozY2Ea70D76mpQLpWwWS1c
      mVikIIPeoCUaS7BSkHikp4VCIolBB1cXE9i0IKqr/5LM5vL0erW8MLyeuzS/HETS60El8kxv
      LTPRAnUuK+01TrbV2VBCkonXYaXFY2eLx4IgQLks4XU5ESnTaLeyrdFLvVENWgOLS8tEindR
      ATy1tagF0FpcqFIBghk1TouWQnichbKH5vo6pkcGKEgqWvxuMpIZi6H6G6EiCCpa7BqmYwVs
      FiOldJYmXx1NOoGpUJSsSotNb+Rwu5u1ZB5RAQUxiBb0hRQ5BNxWA52N9VikAiVBYHw5ikmv
      o5RJMRtNEy0qoz36SjjGUiJLuiTjtBqxiWpCiSQlQcVUKM5SNI1araLFa2Vmk3XZt8vGblBZ
      JhGPYrA4yMbXyAkGPA4L5XyKRF6F06IjHIkjqiQErZ5SCaRCDofHXZHr9SvfepvBpeplYtr0
      WuK5Au0ttcRmg2jtZqRCjkC6gFYUUUkldAYjFlWZpURu3TNRqqIRrFJjEyGel9nZ6mFsLozX
      YSQcS5EqSZgNWjLZIm67GQo5gplb03eqaQQLArU2M4VcFm+ti8DcGgabiXwuQ0pSU2cWWYmm
      EXVacrkCZW65QStoBCs2DlBtBXgHQdik27naCvAeNi0zKMYLtFmZK60Ayn2zVLFY+73IsDlf
      uSDApkJPd57bOtLutXX+0bcrgoIVQBmDGzaLQi/SD2Z9Qka1pagaGypANrbEt779A57+tf+F
      3MRRjk6I/NbPPwpAbK6fP/7uZf7N//HbXHvhz+jLtPKLe4z8l+/087t/8H8qYvzOT4PWYOHn
      d/pQFbI8e20Wld7C53f4UGXT3MxpaDepGZtfpLW9E9Ixjo3OE8lXVwFa/Q3c53fToEnyn09P
      09rSxGMNVmaDQQSDla2NHoZHprC6nWyvM/L7L16h2vN3LFY7P9NTg5BL853ri9jsDj7Z4UEs
      ZJksavHrBYam55nIifzq3ga+fXa84rXMGyrA6OAgeUlCyoUZnl6lkPW8+2dX+/rxONXcnAtS
      LORJrcxxbkiPKJQUkg7w09FQX4OlnGMqnqYkg04loFEJqNQCNUYN1wNJ9vm8qLQy0aR0R7oW
      3y7TC0vUuSz0jc2sf56Zw2nowqeSeHF4Ea+uxFtTq9TlRKIrS1Xf/ADNdV505QIz8fXeS601
      LrSUWYhncDl0XA9m2edz4pLMSOXSHcna2NBhs+uBx/E79KDz8Okn73/3i3IhzJWRVewmmWtX
      hpBUGprrREZXinjMlZ0VXC2KxTKjC8uU9VZsooDNbGZyZo41SWR6NY7NpCWbK/DWtTGuhUu0
      ORWQXy/oaNIWmM6ua6PHbmZ4YhbRZKbRV8Pc3AoA27xGBgLV77kKUCwVGZxZwmp3oFFBqVxi
      YGoRm9PBZDCJzaglU1LT4zHS6HHgrXTVIe9nAwgq2rq3YdaCgJ1tPU0A5OJxDnz2l3igt5bT
      F27g1O2gwV5Ld0qiGA4qIsDy07K8vEhXt59SMoqrsZbsXBhddwOpSJhYSaTHAKfHQ/j99dSq
      ixwfr346NKKa8cU1QMXujhpWQjk+vaOO4ZlFVHozI+ECoCIQiZIoKODKAqYXlnm400dwbY32
      5jrWFgJs62wgEAiSwUC3tsTx8RUioyts9dlZylfeyaBcN+h3jnGjSp0C3ovTbCCWyvJBxUjr
      6dDVmWz/4wi4LTpCyU0mpei1CKrqB/JcZj2RVO4Dn9CVjrco1wukECIpBZzut4W8+c2vIMKp
      6sisXAWQJOSyMvzqm0aZl+n7UygiK6UoYLPcjUCYVC4wdO0KTb37mLl6mrBk58GDu9Cqipx6
      /XVSkpb2HbsIDl2iZsfDaCMjTGfsPLq/pzKSVXEvmax2PtNVg1bK88OBOTJlGYfDhqWQYT5d
      xF/jppyM0+D3UacpcGx0iXSp+m7Q/fVW8skoL4wEALA7HNSQQeOsY6tT5OTIHLs7m9Hlk7w0
      sm4UI8lVK4pxulw80eZBV8ry3WtzqHUGHuvxs7K0RFxrZW+NkbM352hqbqJGyPPW6CLZCufb
      b/j4Gz73Os++9BbJTB6dp5X42ClmQkWgyPWpCA/sbOTUqXOcPfEWpy/0cf7om5wdmKisdFUi
      nYjx6miAeC5PviyjEUUe6W2lzapFbzDx+V2t1Jj0RMOrTOW1dDur7/2aXlji7HKaWHK92ldQ
      a3l6dxdtTjM7GiwMzwcoai14tRJXFpXROS4SDnNkMkQknaEsg06jYioQY09bLXI+w1tzaR5o
      8ePXpVmWtPgr3IIf3kcBWnYcZne7BzQmxOgIo0knDY51H08+Ms+p/nF2792O3uwjv9BPXO/C
      pL3HrtL3odvnZnQ+SBkoFYtcmglSkOGhHR3oJAm/VWQ2IeEky82IEt7cKu5vMHBmYV0B9mzr
      xEWJBqeR86OLGOxedljLXFyIcd+WJkV0hwbY7rNzbX7d2ZFMpQmmc+QlgaVwinabmrPLaeRi
      kWShhEF9FwtizBYrGrWacnKRv//+UfwttRRuFX0bPc088zOfZ2+3D1FvotFjp7axdb2D3IcB
      QYXfKDCfLFNf48DMrRlgyJwduMnphSirBTX/7tN7aHeacegUYErpLaizCUoItNbaGbs5zisT
      a6ymi2xprKHVqSMriexu8mKWSyjCtFdr8YhlglkJf62DJo+Hp7c2IBdL/NzD+zjcaKdWm8de
      28xjfiurmY9QV4iv/MNRRWSDNtQ5SaxE+MDQkWKyQQXa6+3MLUfZlFNWIclwjXVOQiuRTXSH
      ruzfq4CjS9ksrSjjvbx5ZCaXo9UW4raZr9I6K1cBymUo3jsl9jLck92h0aiVcAFsGhnujhtU
      lmVymTSiwYxGJZPPpEll82i0BgwaiWxJhdUoEkuksdjsVLwqsIoPM5Vag8uoBblMOJVfjwIL
      AkaNirws4DRoSWezSGoRoxpimcJ6G78qotfpsOrUlEpFIpkiCCpcZh3pTA40WoxqmUimiN2s
      RyOXCb071UamWn5QjUbEYRBBKrOWzoMg4DTpkcslotkiOlFNoSTjMusRkImnc+TLd2lI3trM
      AN/4xh8SuNVDr//osxw5e4Vv/c23OPXmt/nqN/6e2ZHz/F//9v9DAZ0BK4pWr2dHSwNfOdSJ
      4db4p+amFr6yz8eWrg6ebHPjMZt5Zk8bD3Q3rhduVxmH3creng6+vLsegPauFp7oaOATWxp5
      cGsTzxzcRqfHyhf3ttPtVYYPyGA0srOtkd882IpaAJvTzed3NNPmNOJ2ufnNw1swiSI9jTX8
      2kO91OruohcomZGo9/74aPpiMQ9qDYJah1Gd4fjFKXz1yljMSpJLp5iJ5zl5Y5p0WUZvNNPj
      0BLJldBIBUqikZoaD50WEZOo+sA8obvByuoaZUp8r28OAKlYxmjSI5VyHB1eBFnGohVJlCR8
      TrMiiuKTiTir2QIvX52hLIMoQFoCv91EOpVmMZVHLuW5sZJkeHKO+WzlnQwbKkDblu3Y39vl
      QSXSvmU3X/mtX8Gm1tDW5GU8kKXeWv0gUOUR6PQaGA2sdyXQ63S4zAa2+d2UEnGOjK9Sa9Qw
      FQwzEMxRZ6n+lEjURlxCmrUiaNQq2m063hicQ2u1s9Or5+3xMD67hsujs0Q1emUULQkamq1q
      piM51GoVcrHA+ZuzSAYTpXzh3XborfUupu6QR/B90qHV7D74KLeadtG+8xAauweDXkvLjoN4
      BRMP5Eqo81FcCvj9V5rRmRViEnR1NxAdXeA75+I027VESiIH/FbODk9icnloNRY4v6qAmYtC
      mYtjAUDFnq56LgzPs7+rlovD06isLrosOV4fDbOzw0dwbpk702TkNhFkbkyvkJaht6OB4NQq
      vvZ6xqYXKSIxMBMgL8FKIEA0eWfuWeXGAf7bmwwurlVbDIw6kWy+uLk03aIS4gBg0mlI5zfp
      kdJUb0LMezHqRDL5D45cyB+VKZFSsYSUq35+fWrTMsjIClGA5CY20rsUq7/5AZKZD2pA/14q
      J7NiFUDOFZGz1R9AvVnW+9UowRy+PeQK+tTvFpUs4NlQAWavn+bC+Bq9ew+zrcXNyPk3GVzO
      gcpEb12JvgUtX3yoiW8+e5xf+M3fwvshsoXVWgNP39dBKRHhzcFFSjKY7G4e8WsYjGt4sNXJ
      yNg0ruY2nHKGo9cmieSqu5FcXi9PdNcyv7DA+ZkozpoanuqpZTmwht7moLnGxuW+a8Qs9diT
      i1xdvZ0T986gN1n49N42MuFV3hxawVVby5M9tXgMZY5OpNjtt9B3bQJ/Vzt1YpFXL44Rr3B/
      0A1Vyd20lR0+Lddvrg/Ji0ZCdOx+gPzsKLOBRYYGr3DxwjVmZ2e5A96pqqLW6HCbRZxWExoB
      UGm4f0sTPruew90NxLMF0nkVW302oqkMGQXU2FqtJnRqgRr7un/ncI+PVK5IMpniyKVx4skE
      o7EyjV4HLoX0cNXq9NgNajx2MwIQCgQ4MRNjdHwJq8OCTtThrWtgt1dDMpOjdDeH5JWSK/zw
      7REO7e++9R/y9J87RfvDT+HV6mmus/L20DLtNR+OjtDvxeR0sDQxQSCvwiiq8NY3sK/BTJvP
      g1GQODe2xs5WO9989SIzaQ3bGqo/cs5vM3Dy2jhasxUArUbg8sg87c11eBv9RGfnyOQLjCxF
      FBG3AHA4bYzfHCMt6FhPJBbY57Nwfj5Bva7MD/sXaKizk1wLslTS0WSvvLtxQwUY7O/D7Wsk
      GV/Pg7R4fDz82FMc2t2FxeGhd8cOdm/tpbm5iTvQraKqpMIhTPWNmEoZ3I01lBbn+L0X+zky
      OM+JqTWe2l7H5FKSg7s72V2rYy5c/VD45EqMAzvaCa6G2dpew6XRFR7Z1UJgJYTHBMMr667a
      Yj5HPKcMFQithalraaWUitPcVo9NpSWbjpMplJkI5fnE9hpGh8aZ17joMMssJT9C6dC//kcv
      MDi7Wm0xqPHaiQdjHzj4QzlGsIDPa2UlGN9Up1KlGMF1NXbCq7EPHJIHd8kI/ph1VoOxaotw
      m8gsBjc32E9JrKxWZ50VqwCCVoOghEqrTSIAclkZp+ntoJTZlrfFR+EGEDQqBFGx4v0ksoxw
      T9pCHyvAP8vImZc4PRblwONPs7PZSf9bzzIUVpNNldnVVOb4hMhvPd3Jf/7zl/jX//7f06CA
      9piVwmRz8PTWBtodIn98ZADMDj7dU0+3V+Tl0Tg7asxMz87hampDnYnx9o0ZotXuDt3k475G
      N3WaFN84MUl9o4+nmmwsrqyi9vhwkuXc2DIHtjRhF/L8zZmJqnuDnG4PT3bV0WWHr70+iNHm
      5JntDRSSccYLOnZ5DAwMz9Czowu7VOC580OEKmzAb6gAPYc+QzD0bdK3UgHy+TyNnfcxe/Y4
      kYxIJBjh5JkCULwj/tlqko5HOT1rJBTIkCzJEItwdsnE6lKC7R2dhBNxlhJlOsxq1pJllPDy
      mZ5bpMZlpX9sGgBRo0EjqNBpDdjNKnLRIt6aGqwaibmVuCLO/UhojctWE/OzIUoyqNVqRJUK
      lahGJ2tQq9ToTHZya7OcyFqoN+kI5SrrcdvwLgmtLNPU1crU6Oz6f5DKrAVWOfTZz+ERdbQ2
      OOmbCtPs+hCFgN9FoKvewtBi9N3PPR4jQ4EE2UKO4yOr7Gp28uq5QQZCJTo9CoiFCFpa9AUm
      0uunUY9Lzw8uTaC3GDh2cZgjc3n2NhgYn14AlxvbB/y4u4OKTreekdX1qqsau5mrI+OkRBPN
      Oonv9i/Q6DKg1ojo1CqKd8DLtuENkIuvcH06xeGDDwLgbe7B17CDJreR2UQ7+30WuhJ5DLkg
      5nvoqb4pBIFkNMZaAdo6GkhNBojEosQKMqfGV/lEbw3XxhZpafJToypwbFgB6dCiyPSt7tC7
      Omu4Phnk0Z3NTM2tUO9roNEEP7wwyfauRuRwCEX4ttQqQqEIiRJ0dfpILQZp3dpEZGWF2YKO
      T/U46RuZo7O7nU5Tltc/SnGA3/jr1xicr346tMtmJBbPfLBPvcJpuv9yBDw2PaF4dpPiKEJo
      3DYTkXh6c3bJR8ELJJfKSApoN762dhs+dYUElVbX7p0s2ncI3s46V7ABm2IVoBRLUworom5p
      c1R4fOddRQEFMbeDoKmcv3lDVZJlmZmRAZajGUBmcfQKr776GqcvD7M0cY2Tl0YopoK8+cbb
      xKt/UFcUlVrksYPb2ddoB0At6nj8/u3sbbThqKnllx/fzdaadeOsq8FRZWnXMVrtfP7h7TRa
      1/u3am1OvvTEbg60OGhqbeLnHujErNfx+KEdfKK3rsrSrqPR6vnEA9vZXv+jZEK1wcIO/3pC
      X0tTLQ6dhj27tvDY1to7Usi/oQJkQtP8w7e+z0J4fZza3OQIdVv2M3PmGNeG+njhxde4cukC
      r7x6hNi9d+O+L3Z/C7q1Gaz1Phw6AZ1Ox/LKGnu2NrOtu5H5iWmmwzl27+zhsR5lbKYDvc30
      XR3jvt1dAHR0NxObm2M0puLRDisToSLb2nwUQ4tY/D4U4LfC39pCan6K1vYWRBUgqHn4wE4O
      tjsw2Z388pM78Npr6LKmCatttN6B4vMNFKDMmy+8jLPWzVooum4mlfL0nzuBsb0Xh2igzqXj
      aP8C7b4PX1uUZDCApamDPX47GrWKTCrBciJPUYK5iRmyFi9P9NYycGOMNSU0hgZGF0Ic3tdD
      s2M9Irk8OUNQY+PTh7qwaHU4nXbaa80U8kVCpTLWKssLEAys4uvsZHuDDUEQ8LW1stWpxumy
      88mDWynlStSaCsTULg5212Ct4NPnHTZQAIFHP/cluursmIy3QrwaHXsfeJIvPPMoWkGgqcWP
      qLfh0CvWjPgXI6g12A0ic8tBzG4n9S4Pz+xvRVUqUVfnpbXWQjarrHefwahHr1FxYzJAi99F
      g9dFe72d9NoaC1mZWpuWuZUou3dvY79VTbDaAgMaUYtFr2F0ZoXaejepxQVe6J8nmsxw8vx1
      hgJJEtkyDrOeRDjKbLzyp837ukFlWQIEBOFW2qwgIAgCsiQhC8K7I4EEQVVxO+pXfvf7XJ9a
      ruwPvQ1UgoAsy/9/e2cWJNd53fffvbf3fe/p7pnu2bGDEFbuorhIpE07iWK5IkWqcpUeUkml
      KlV5U/KiPOQlS5lVSWxHLimuslWyFotmRIo0SRAk9oUACAwwg5mevbunu6f3fb83Dw3QlJMh
      BkoPuiH794KZ7qnpg2/uufc7y/c/jIwPUVhOULr7vXL3Pfne/527icQBCIK7dsGucQ8ry0na
      ooAiKygCiHRtFoWuxb9iah+D4HvrPDruI7Ucp8xn1vQuwl2b712pvQyCP/f2LQh/+4AQROEz
      X4vdc/mPWPbgQbh3ga8vd8cNfXb+l/yZrwcp73PPrvnl5L0Xuv8qIN+1VB6wss89e1aW45++
      9nct3MlS1cDuXwS19Gh1g8LAyKI8EIrCYLnxNngoQ/LaTar1JmqtHq1apNVs0Gi2EVUaNKJC
      UxbQaySqtQY6gwGpxw8DQRAGYn7tdlEUZSAEph4UpY/q0IPAlg6wdPF/czpu5ktPn2DcZ+Xy
      2z9kseUht77B/jGZX94U+De/t4//+NrP+fev/SGhgRCb7A2SWstXTuyik0/z/q0NRK2el45O
      IufTbIoWDvgtpBObSBYrXouWM+dv9n1OmMvr5fm9Xm7PLnE7WcEfHOZLU26WVyIodg9jJpm/
      uRrhycOT1DbjnLzT/zBYb7LwyrFxEusRzi9lMFptvHJkgs3IKmttE09POLh8bZ6x/bvxCDXe
      uHCHUo8VOLa8xUajSTqNAul8+dPX1GotaklEETXoxDKnLi7i9/3mpUFVGiNeo4jLaUMjgk5v
      wKET8LltfHJrgXC6Qng9wZsX7pApVYkU+6+xc3Dcy7mrCxw+MAFAvVTg5+cXGB32shJNonW4
      2B/0UI5HMASHsfXZXoCh4QCbS4sER4OoRZBbDW6v59g74ee5fQE2C1XQ2rF1UswVBUZ2QIj5
      c3SBDvDMkRDz86t3f1KFPzTFt779TWwqNeNBF7OxCsOW3zxlXIPNQiYWI98U0KlFjGYTqXiS
      gixh0hsIaFss5ho4/cOUNyJUBmDrfy28wRNfmMSu6WZIsrkyE6NeLt4Ms5nOc24ujUGoovME
      mHTrByL421iP4BgdZ9SmQxCgVq2xGotTFfXokbmTrHN4wg2dNrV2B7XY+63alusQGh/hymyU
      33rxBADjBx5H5fBjMWkJ7T+BUzDyZL2NVM/g6P341r5SKeQx7w7RrlZwB71Uk0Vs0yHUtRKi
      zkg629XWGXZruTMzGP1KDrsFi07Dx3MRdk948fjGedrb4YqqxT6nC4tK4ea8wtFRHWvzEfo/
      fhC0BiNei44b4XVGRv1QVXj6YIBKOsWtlp5nd7u4c2uRvccO8my7ys/CD7kO0E/+4L/8lBv3
      UpB9xOd3UNi4//TCwVGHFhgN2IjEctuTRVEG4zjfcMBJOpa5r/wMgPD3QRx3UIhvPHpTIldj
      j96UyGgs05fPHVgHkCwGJEf/JQcfhEGQc39gZPmRKwMID+M8QKdRZmU9ydBIEJNORTEdZyNd
      RG9x4tB2yDQkgi4Dy+tJhsfG0e1Ar2q/8uoanb47SK7dYi6Ro6UIBD12hHqVeB0mXQbWkjkM
      FitWsc1yukynz3UAUaVm2mdjczNDttHd1hgMejq1GjqLhYBRYD5RYnTIiVZuMJu4F7sIfSsD
      CILIqM9Jo1Rgo9RElFRM+OwUsjmqoo4Jl5FoIoXO6sChlpnfyNKUe3tdbOlKF95+g+V4lHCk
      +2iaOf83LG1WeOfHP+Xc6dd57U9+xMLMBf7zf/rvJAekI7JXKIqCIml5dle3B93t9vIFr5Fp
      v5Mj+0bxW6w8NRbgpT1uPE4XY/b+ZwH2TI4QMGh54WAIAIPFyrdfPkJAbQiDMwAAEvlJREFU
      o+b5g8MMDQc5NmLnyVE7rR6PGv11sbs8HA6Yee7gGBJgtVnxmY28emycx/aOY5dkZEReOBCi
      2ZZ35EG1pQOsRdaIR1ZJ5briuMgdoquLtLRmdJIOq77N+xeXGR0ehMba3tJq1GlJai7cXqEu
      g8tpJ+QwE7LpkZsKfpeJdquJrDawZ8RJ0NR/ZYxmS2Z4yE670T2cUSuXuBrNgwiyoiJgkuh0
      oISKp3b76b/LdqvQNqsFldxGESCXybBelVEpUK1U8Pj97PNYydQbnNjlx7kD24wtHWDYP8xQ
      wEshe/espkrL0We+wr/+V9/CKEmMj/pIFBW8xkFYyl4jMuXSEE7VMRq0lHMFFhJZCrKITydw
      ZS2L2aAmlsoynygQK/ZfHdqmUzO7lkCjN2AxakGW6cgKqNSoWlVuxit4rVpiiQx5WRwIBzDo
      dWxsxGmJGqwmHV6XE4/UIC9LCI0GN6J5rCYd+WyOSLGNQd17B9gyDdqqFVleSxIYHcOkkyik
      k4hGF2a9imImQQMtrVYHsV3B5gv1PAb49vfe4makf6oQHouezWKN6elhcuENzEMOOtUyiYbA
      Lo+RlXi2GwMILcLpMrKioGx3MN0OoFJr2O23k9jMEgp5uH0nhtpspFWuYLDZCBgF5jaKjPqd
      dColVnJ3nbaP2yFBlJgMuKgX81j8XhILG7iHXRSzWUpomXBqmY9kcLpdmJQ6C8kSMr0Ngge2
      DtBvB7iHWhK3tWdW+uwAn2W7NgN9dYDPolaJtLYpMfhQskD9RjLpUVn732GnsP1Fag/IUL8O
      n7O3/bsMiJLFA9ncw5aIwXUAvRaV6dFR3FUUBVl6BOWhB8QBHogepkG3dIC5jz/i+s3b6Ca/
      yFef3cv1kz9jJiXQqMOhkQ4fLan59m9N8dr33uRffOc7+B+da/W+qCQ13zgyRTKV5ORKBq3B
      xG9PeSkV84RbWh536ZiNJLF7Pfg0cOrOGtE+Twr0uV08N2KnVMjy5lIGm8fHN8eMXF6NY/EO
      4xabvD+7Qk3n4J+EtPz5TPz+v3SHMZrM/M5uH2K9wl/eimEyW3h52ou6USXc1nLQpuaj2TWm
      J4O4pQ6/uLFCptnbLduWT51dX3gcUZY4cWgKgGq1ytjew6jySTZLReLRMKfP3qTeqNAajG1k
      z1DpTDjVHWrNDjJgNhrJZtPYHHZcWhVqUUJvtrHPLFGo1Sn1eHTnr8NBvxtZbhMrdIPbUaeB
      eqNDpS3ht6hptpq0BDVPB5xotINx0GjU58WoNNkoVFCASZ8bvSATK1S4uhQlK6uwOVzsNUG2
      VKW2AzLkW65EIxMmpxvDb7mbMJPbrC0tcuzVf4RHrWU8YOdsOM24q/858F7TapT5weUwit6M
      TSOQLeRpa41YBIVhg8SPZ+N4LHoKxQIzBZlpe//XQFDanLmzzvTwEAAra1H+bCbKpM/O21fn
      eXejzW/vCTDh0DPptTMQTSaKzMzqBg6nE5XYbcy7sRzF4Xbh1oj8ci7OmMvIZjrDSlNFyNz7
      5O2WW6B2U2D/wd2fVsldI9P4hw8z5jGyXBrliM/CRL6OoZHEOLCRxK+HIEo8MxWgWiri8Low
      bJYw67TMxFKst9R8ZdLJ7GoUs8vFQWuHj5b6Xwq/vLbJF3eFWNxI8VjIRb4s89KUjaV4irGA
      j4BO4Z3ba2RaKp4YNVG+/6/ccZaicV6YHiafyzIe9LIZ3eQLUwFy6QxWp4NnHFou3VllZMTH
      uLbB++Xe91oNbBr0X75+jlvJ/nc1Ok16CuUa90twKopCayCa4QS8Fh2bxW2qQw9IEOy2GMgW
      t6HCDQ8nCP4HumTK/a/yPhgKyQGoTD8oqWJ/ZiwMrAOYDGqs5kfruGVDp+63CQ9MZyBmG2+f
      rv7YQ5BF6TcqlYRmB3o/dgpFUbpqeY8Yg9IZul0URUF+GLpAl978My5Hauw+/govHQlx7o3v
      c7toppQqcni8w1u3JP7t1/bxH/7rT/l3f/ibJYsCCtXF8yzN1jjwuy/Syq2w9N4ZFKMLl73D
      5noC59HnKF07h2B14Xv8RQx9FgeozJ1m/XYE16FncU+OINfzrPzVD/H8zrfInn6LZqWEZd9x
      CrOf0Oxo2ff1r/ddDchoMPGNvQHC8SQfxfLYrFZeDrpQGmWiio6gQUMsHiOmsnFIW+dnK70/
      nbdlGlQSRBRAuidOJUi4fcMYJZmmoEbVyXPqwgIez0Ak1HqKXM+RWlhHc68SrSgIooAgqnAd
      /zJWhxG5UQSNHY1QpZjs/xHzdrODxqBHkbthpNKW0bvdoLIQevXrDO2bolnM4jj6Ci67bltn
      b3catUpNrdH49CLMFQqcjRdRiwJnw2u8s56h1lFoNGqU5Z2pXXzOeYAcjz+5l8ha7O4rAjqD
      lX/8z/8ZDpWa8REnN9ZLBG39z4H3mnZug2q+SG5xnnazTTOXwHLwRXRChXwkwtCJJ6ln61hG
      hlDpdaj1/X/8abwThF58ldr6LACSyYFGqwLaFOau0DJM4/Rb6TRrtGR5IPa+zWadd+bXUeuN
      qASwGPRUi1nygoag3caEpsXVTI10tbFjpza3XIfnX32ZC7ejfPm54wAEdx9G5ZlkyKZDnj6E
      aZeJI5UW6noK2yA0l/cQjW8/e35vlGw8R/mTi6gOHUK5dBrd6CF0mjrrV5YYOv4MtcWLtIxj
      OAL9l5lSaQQ2Tr+D/eBTpK9cwnbsBIbRPUhymc3oOm15A9WBE3RWLyH69wyEA7TaHQ6E/CSz
      GSaGPeQSefaFfKwl0wTsTvxagVqjyZ1yi8V8ZUdsGNg6wHdOXmU+8wCD03aIRiGPxmq7735Z
      URSagzAxmw6NYgWNxbKtPf6gBMEWrZpSo3XfO/1DC4L7jU4lolf3v2dF73Js+2elgWiKEtE7
      tv9E6rYg7KA526TZ6aBVbe/v3emh0w6sA1h1KtzGR6cOoCgKjR1o1tppmp2dOWy+UyiKQi+X
      eUsHiC9c4/JimmNPPI3frmfp+mlurBXQmtzscre4mdTwyjE/f/XWRV752u+zA/PL+oZczzH3
      3rvoRg4x/tguGskF5i5co97QcuSrL7N5awb3wcPEz75NuWNl+ovPMAgli+rqVfLiOP6gnVps
      jvCVGex7TiBlb5HJtBh78jkiF94F6xh7nj7Wb3MBaKZX2EzB8J4xmpl1Vi5cQhPYh01XJBkp
      MPLEU2Q+/oC2YZjg0UNIPdYH3fKZc+7kaXx+LafO3gIgEVsndPAJ0jevcGd5jtMfnebyxY+5
      cuUq5cE4Cdg7ZHBNjJNemKejgG5omt3HD2AeDtFMLrH+yQztjowlOEUzsUC12v87v1xLs3rm
      fbKpbrAYnbnD1PPPkw9/TCIcwxrahVCLUi4ruELBPlvbRWnX2Dj/Lqno3TSypCf0pVepLF8j
      uRhn7FCA9cunKDV9GJQU+XSp5zZs6QBPvfAMq3PLNFp3pb/bDT4+9yHew0/gUusYdht493qE
      SV//U4C9RjTYcQQnMOjbNOttQCF+Z4HA/r2YRnbj8tpA0GAPhnAFfZQz/ZdPjJ5+i3yxSXZ1
      GYC2DGqNBlHUMv3K72JQNkikjex+9iky184PRB2gNH+O2HKa/NoSsqygsbloJuZwHX4B76SP
      tUvXaCluzNoEiYV1Op3eHzracguUia9Tauo4+sReADQmO08eeYkDIxZunFxjeq+feLyCoxXt
      +XSYftNKh7n+7gW0zgCV5TsIe8dotIyYrFqgg0qnR5BLzPz167Q1JiYO9L8YOPLSN/Hvu8pi
      xkt6fh7XkIlP3vhrDEOjbFw+Q6Ol4NwzxMr5myhGz0DIopj3PM8TvjHC8xVK4TkajXXmzyzi
      3n8Yk5yg0dLhPx4iefIW2qFRbM7ep5sHNg362qUZVgv971ovLIXRTUxxvxBncILgDrnldSzj
      Y9uarD4oQXBxZRH92CT3ayd8aEHwP9DFOjHVbxMeEAn7+Fi/jXhgLGOTffncgXUAg0bCrB2A
      1Mo2UQDtgBSVHoRmWx640an3o9XDguOWDqAoCoVcGoPVRS2XoIYBr8uKQIdEJEKtI+D0eKnl
      NtHbhxCbBUptNT5Xb/Zpwt2h3P1AkdvkI6tI1iHMNhMC0KlXaAsatFo1zVIetCbUKoFauYrB
      YoZPh1D3h06jTDaWxBIYRauVkBtlMrEkFn8IpZahVGzhGBlGokm5UMdk72q6CtA3u5VOk3w0
      gsbhx2DW0y6myW1mEdQGzFYN5XwNa2CYRiZKWzRjdTuA3qpwS9/97ne/+/96IzZ3gT/6/o+Z
      2rOLN9/+iFj4Ju6pxzBp6nzvT/4cjwXO3Fzh9E/+J0lNkOiZH/HWbJ3nju7uiWHXEmmKjf4I
      TbXzERZv3iF6awnf3l3QrHDjL79H2TiG0yZy8Qd/hODbS2XuFDOfxBjd23189/N0YS58g2xy
      hUi4jH/ST3buKpuJCMmlCKnwEnI9C5YglfD7XD0TYfyx7tau00ejG5vLxMJhYnNRfLsm6NQK
      FNbnCF9dRdUpUE+tkMg0qaytkLxzE+v4PtRqoafrvGUaVFbbmBxx0ixmkU0e3PoOuVL3guzU
      S6xFk+hNJtTmYfLLF0k1tRgGRG7j/xe1PcTouIe23EbpyIhqHYH9+5FEiH98GrV3DFFRcO05
      jkk/GNse555jGCQFxG5RxnngCUxSi2Z+k0xyg3x8k1p6hXi2iVmnHYjAVzc0hXfISkdug6Kg
      tQ+h1Jrse/VlQk++gG3IhzMQYuzYHtpNBbnT+4LTlldscGIKo0ZEZTCjVHMU6mA2dmN0rSPI
      P/3GH/C1Lx9FrTFhlfNo3CEGoHWnJ7Qyq6QrRmwWkWqugCxKqDUaBEBGoBRZILG2gUo3OGpg
      mYUbqIf2ITazNMplUrPX0QZ2o1YLOEd3MzI9RC6epVPIE5+bYxBEHGuJRSq40GtaNEslZKVK
      oShgs+mInfsF8bSE1dxiYzGLe9hJo9b7cbRbp0EVmUQsgnUoSDEWpihYmQx6EWizuhpndHQE
      6LCyuI7ZrEFRaSjXZMaGvT0x7E8/mSNS7E8aVOm0iM9cQ3JPIK/OYXzqGXTFDC3RiNGko55P
      o2gs6LQChUwOm8fTVYXo43aiXckSm1vAsesA2ZkZvIemScwu4tx1EIoRspkOwwd2IwkN8vES
      Np8LgEar07engdyqkZydQeubprl8C8vxY7RSJSxuO6m5a1TKLayje6G4SkNw4J0IIqD0VIht
      YOsA/XSAz9Kq11HpdNtqh+6nA/wtMq16C5VOu6126H46wGdp1+tI217n3n3uwKZBBfo2uupX
      0Oi2d+JNEASEgbiURDS67XcmiqLAINwDNfrtrbMiCIh/H1QhzFoJu2Fgzfu/6N6ZHp26xT0G
      4Np/IBRFof0wskCKIhNZWaDaAqVVYmF54+47bWYun+PsuQtsZAvcvnqJjVyVVGSBmwuR3lnW
      R+R2lfkP32NlIdrVoWnVCJ/7gOh6mkY+zo2TH1Io1onfvMDM+Y9pDIA4biO3wa2T75JOd7tB
      5Xqe2x+cJJUqkp6/xuyVW3TaNZYufEh0bbPP1nbp1Avc+fA9oqtJFKXbHbp0/hSR1STlWJiZ
      s5doNNtErnzI/PW5HUnZbukA4cvv8D/+9C/Ilkr85H/9Mb84fePuOw0+OD/DmEvF2+9+wBs/
      +gHvnr3Gqdd/yOunrvXcwH7QysZRDU0SvfIBlVqHZjGFaLQxe+oU199+D8ewk2z8Dgu3cqhr
      EaLr/e8GzSdTeHfv4uY7vwTg9jvvYA6OUIgtUSxDPXyWtfUMotHB3Ifv99naLrVMAuPIFOHT
      79GRFeLXz1JTuajEl7l94RrDfom5K9dpiG4a65+QTD3Edmhn6DGO7hoCQeKLL73IZ3dozUKC
      SzfChMZG0ZmDVFYvkpVsGH9D6gBazzgBtxrHxH70OgmdM4jTIiELApnEOhszN0itriCYPbh8
      Hurl/gfr3t0H0TTyjBw+AUAhlyA5c4NkvMzYniAtUYcgmXFYRURZGog0qCkwjdOkMLS3e9Cl
      nN4gtRwmurKB3a5h7uIVUqkWY3v9qJ1BHPbet95v7QAeT7fNWTLgcZp/5T2tI8hXf/8bvHhi
      F5Jaj8cA1qHQb0xbdCU6w5vf/wktWaAYiZBPLLIwt4FWqyIwOY3OYkU0DtHauM7ctQXMLnu/
      TWb99M85/d51JLFFPhbHOzaJxmpFpVSYOXMJnclAJb7I0mwUtU49EOF6fuEi7/3oLToKFGNR
      zKEpTFYTWo2EIGnRW9wEx8y8/d/+mHJNRt4BGcfPqQMoVMoltEYLEi1KlRYWswGQKRQrWC3m
      7tf5UlfCUJRothWsZkNPDPvx3ALxys5IYdyPdq1EIVtEUGmprixiOX4U0ikkgw2dWqGYK2Fy
      uWgVMzTaEhaXA1Ggr4NC6vk01WoDlV5PJrxC4PB+quksersbpV6g3hSwOC1UMmkEnQXT3b9T
      P4PgVqVAqVBGUOuprCxgP3oUOZ1GMtpRCw0q5RZmu4FCKguCCrPbhUoSexoE/x/OeDhzr0V5
      ewAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='What Boroughs' width='192'>
      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
      Rh5cfQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='borough outline' width='124'>
      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
    </thumbnail>
    <thumbnail height='192' name='contib factor' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='165' name='horizontal_borough' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAClCAYAAAAK5fLuAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMh0lEQVR4nO3dfXRU9Z3H8fdkZkIyk5BnEp4FIoQ8gdiu4AJae9oeoDSHKlHEdltbG1YQ
      QURkWVZbtbTQWmpLFZEAriynAQWxllZBq7CI6KFdLRJCjFAMEEICgYRkkpm5+0cohocIJpPc
      gd/n9RfcO8x84dz3fZiZGxyWZVmIGCrC7gFE7KQAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgK
      QIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDE
      aApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIym
      AMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApA
      jKYAxGguuwe4qrz3FPmLtp2zqEu3L/GdObP4em8n5etnM3PNgZZr6Zr9TWbPvJ1BsQABav66
      lsUr/8Tew6fxuzz0G57P3d8fe2b9ezyVv4htqXn8dPFk0p3w3lP5LNo2ktlF08nYsZjpT24n
      Of+X/Oy23nBwHQ/PKqJ82DSWPjya2M77l7hi6AgQcn2Z9KsiioqKKHrhUW4Jvs9zhVs4fnb9
      SGYXNa9fs+w79Pv7i/z2j58AUL9rKQ8u2IIn73EK1xSx5umHyD30Aj9+Yj0HAy1eouJVVm+p
      uuCVY4f/gIIbvRx4aQkb9+9n45KXOOAaxpSp2vhbowA6QVyvnnS9yHJnXBaZfaGi4hhwnK2v
      /IWaQRO4+5ZeRDnBGZfJ5B+OI75sLet3tSzAz+41q3mv/vxnjGX4D77PMMpYO38+a8sg63v3
      MFpbf6sUQMgdYM3MfPLz88m/61E2HbuWW0b3uugjAwffYfsBGJTeHyileDckZwwkqeWD0geS
      gZ+Dnx45u6jXsGGk1m3j+ZdKCZz/pLGjueeuQfh9Pvx9J/LDryed/whpQdcAIdeXSb9axISe
      QOMR/rDgAZ6ft4r0oun0AGAbi/LPXCe4EskY+wDTvpEElF32KzgH3cYkz14WvbqaPw84f+0p
      dn/wcfMvyz9gd9UEeqqBVukI0JEi07gutydwiMNnd+AjmV20hmWP5tGfkzRGJxPrBEgnIwuO
      FZdwztl9aQnFuOiWkthiYTRfnjyJLHaze++5L3lqx3JW7PLTd+RI+vp3s3LZ25zquL/hFU8B
      dKRADXv3lkNcBtemtVzhJC7zDqZO7MM/Xvw5K3bVAwmMGn8zcXtfYNG6UhoCEKj5iNXPvcqJ
      nnlMGBF97nMnfZXJ41LPXXZqB8uXbqcuNY+CqVMpyEvFv2sFy3cogdYogJBrcQ0w6R5WlGZw
      64O3MviCxznp/a2pfLtvDX95egW76iF6WAG/mPstorc+zt2T8pn07wvZmTiRR35yO+nOC/98
      +re/y0jvP39fz67/Xs72uji+MeUO0p1O0u+4n7zUOrYvXY4auDiHZVmW3UOI2EVHADGaAhCj
      XfJt0OLi4s6YQ8QWugYQo+kUSIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApA
      jKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRoCkCMpgDEaApAjKYAxGgKQIymAMRo
      CkCMpgBC5OTJkxw5cuTSD5Swov8kL0R+8eSvqa2rw+mAzKxMhubmkJmZSZcuXeweTT6Hfjp0
      CLz99lZe3vIuVkoOVtNpArVHiWyspuHEYVJTuzN0SA7Z2Vn069fP7lHlPAogBB54cDZWr5E4
      XFEXrAvWV+M4XYmzoYrG0zUMyshgaG4uWVmZxMfH2zCttKQA2qnl3v9SrEATwdqjuHxVBGor
      8Hg8DMnNITcnm8GDL/xv9KTjKYB2+ry9/6VYvlMEaiuIbKymrvoQ/dMHct2Q5qND9+7dO2Ba
      OZ8CaIcvsve/HMHao0TUH8NRX4nDCpCZmcnQIc0X01FRXzwwuTQF0A7t2ftfitVUf+Ziugpf
      zRGSU1K57szFdP/+/UP+eqZSAG0U6r3/pQTrj0Nd8/VD4+kTXDsw4+zpUkJCQqfMcDVSAG3U
      kXv/S7GCfoK1FbgaqgjUHiU6OorcnGxyc7LJzMzE4XB0+kxXKgXQBp29978Uy3eKYF0l7sYq
      Tlcfom+/AQwbmktWVhY9evSwe7ywpgDa4P4ZM3GkDSMippvdo1xU4OzF9DEINpI5uPliOisr
      i+joaLvHCysK4AuyLItt//sOm7dsoepYJV3iuuF3JxDhScYRHX4fbFn+BoK1R3E3VuM7cYik
      5G4MHZJDTnYWAwYMsHs82ymAdvD5fOzbt4+P9hSze08xx45WEB2XSlNkPM7EdAjDc/Hmi+lK
      XI1VuB0B7r9vKmlpaXaPZRsFEEJNTU2UlJSwfsNGKh2pOLv2tHukVlm1R+gVVcOsGdPtHsVW
      +jp0CLndbiIju3CirjGsN34CjQQr/s/4jR8UQMgVrlxFICnL7jE+36fbefihh+x57YadzM8t
      YNPlLvdXsvqOm1hcevGnO/7WPEaleXE4Esi+s5Bi/9kVzBuVhtfhICH7TgrPrPAXF3JndgIO
      h5e0UfMUQCi99vpmGt2JOLrE2j1KqyKO/Z3x48bQvXvnn/c3lK1n2o1f4fEPL2+5v/IdFk/8
      Mnf9vuniT+h/i8f+7WOmfFiDZR3n/fv2UfDIuwC8Pn8sxVP2UGdZVBYOYOGs56mgnMLp84h6
      rIQmq4rNY99UAKHi8/l4ZeNGrORMu0dp3aly+qfF8pWbR9vw4qWsWvAWX133Aj+6rOXw5pIn
      4aE1LBrRylPu/ys7egznhpTm+7qiRowm47WtFANd41Lwej57yzcyIQ4PPfnRa4cpnJCCy+/H
      j06BQmZ54Sqc3YfaPUarrKbTOE+UcO+U8zezzpJOwbLFTOh//ifnrS2Hrz26lhkjUlq/bfGa
      QeTs2cG7lX6ggbKVq9j4/j4+AW6Y+3t6/yQah8OBe/KnPLIgj8+Oy5socMdy3bPpCiAUSkr2
      UXbwMBFhfOFrfbqduXPm2D1GaLnG8LMNA3gmJw6HN5c5jUP4mseNi3IKb59KxNJ6LMuiaftN
      /M+4hXx2hjWGpZZF/SuDFUAorFi5Cn9Stt1jtMpZ+Tdun3gbiYlX35fmEm56gq1H6rDqSlg7
      2s2eL2VwLR/w7h+v58Z/aT6quFJGMirmD2w570I6KnuiAmiPhoYG7pt+P74eo4joEmP3OBcI
      NpwkuuIdFv14DiOG32D3OCGzqcBBwZm3i86+C+RNY9QzA3lxyzSuYQxLDozjz2ffBfovPM++
      wYz0lu8COUjIXqgPwtpjydNL2XfcHbanPk0lm1j48wVX3fd//Dvn80TVYzwypv3PpSNAG+3d
      W8InB4+E7caPFcTljsTvD9g9Sch9uDOaG0eG5rl0BGijOXPn4Uu5nohIr92jfK76j17md0uW
      6B6BVugI0Aavb95MMLZ32G/8AFGDxjDzgVl2jxG2FEAbnDhRg6/pyji1cDgjode/Mvc//tPu
      UcKSAmiD2JgYHMFWPp4PQxFdYmhIyOKxJxbYPUrYUQBtEBPjJcK6cgIAcEQnctzVgyd//Ru7
      RwkrCqANPB4PTuvKOAU6hzeNQ/Ueli1fYfckYUMBtIHX64Vgo91jtEkwphf7yv5BeXm53aOE
      BQXQBl6vl6D/ygwAwN/kw+l02j1GWFAAbeDxeAg2+eweo22sIDExXhITE+2eJCwogDaIj4+n
      T99rcBxv5TalMBbc/wYzpt1LZGSk3aOEBX0S3A7rXlrP9h07CSbnEuEJ/z1qxOGdfO/OW8nO
      CuObdjqZAminiooKnnn2OU4FowmG+F7gYN1RXDVl+E5V4fe3721Xp8vNvVOnkZkxMETTXR0U
      QIhseeNNNmzYgKv79RDVFYe77d/ADJw8hPtkGSlJ8UzIG8/AgdpoO4oCCKGGhgbWrX+Zv+3a
      hT9o4fQm0eSOJ8KTRMRl3CgfOL6fiJoy+ve7hrzx4+jTp0/HD204BdBBqqurm39qXPFeSkr2
      cbquDndsCo2urs1BRH92d1awupRgVSlDhg4lb/w4kpOTbZzcLAqgk9TW1lJaWkpxcQnFJSUc
      O1pBbGo/ag5/zOibbmb8N8c2f8AmnUoB2OSfP0Zx8ODBRETo3Wi7KAAxmnY9YjQFIEZTAGI0
      BSBGUwBiNAUgRlMAYjQFIEZTAGI0BSBGUwBiNAUgRlMAYjQFIEZTAGI0BSBGUwBiNAUgRlMA
      YjQFIEZTAGI0BSBGUwBiNAUgRlMAYrT/B3PnGD6GRwmFAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
